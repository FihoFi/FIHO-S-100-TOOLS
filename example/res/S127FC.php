

	/**
	* S127 Features as PHP, generated by S127 FC2PHP
	* Feature Catalogue for S-127
	*/
	
	//********************************* SIMPLE ATTRIBUTES ***********************************************************
	
			/**
			* SimpleAttribute administrativeDivision
			*
			* Administrative division is a generic term for an administrative region within a country at a level below that of the sovereign state.
			* @property int value
			*/
			class administrativeDivision extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute applicationProfile
			*
			* name of an application profile that can be used with the online resource (ISO 19115)
			* @property int value
			*/
			class applicationProfile extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute inBallast
			*
			* Whether the vessel is in ballast.
			* @property int value
			*/
			class inBallast extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_boolean($value);
				}
			}
         
			/**
			* SimpleAttribute callName
			*
			* The designated call name of a station, e.g. radio station, radar station, pilot.
			* @property int value
			*/
			class callName extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute callSign
			*
			* The designated call-sign of a radio station.
			* @property int value
			*/
			class callSign extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration cardinalDirection
			*
			* Principal and intermediate compass points.
			* @property int value
			*/
			class cardinalDirection extends EnumerationType
			{
				/**
				* Enumeration cardinalDirection
				*
				* Principal and intermediate compass points.
				* @param int value
				* 
				* 1=N
				* 2=NNE
				* 3=NE
				* 4=ENE
				* 5=E
				* 6=ESE
				* 7=SE
				* 8=SSE
				* 9=S
				* 10=SSW
				* 11=SW
				* 12=WSW
				* 13=W
				* 14=WNW
				* 15=NW
				* 16=NNW
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "N");
					$this->addValue(2, "NNE");
					$this->addValue(3, "NE");
					$this->addValue(4, "ENE");
					$this->addValue(5, "E");
					$this->addValue(6, "ESE");
					$this->addValue(7, "SE");
					$this->addValue(8, "SSE");
					$this->addValue(9, "S");
					$this->addValue(10, "SSW");
					$this->addValue(11, "SW");
					$this->addValue(12, "WSW");
					$this->addValue(13, "W");
					$this->addValue(14, "WNW");
					$this->addValue(15, "NW");
					$this->addValue(16, "NNW");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfAuthority
			*
			* The type of person, government agency or organisation granted powers of managing or controlling access to and/or activity in an area
			* @property int value
			*/
			class categoryOfAuthority extends EnumerationType
			{
				/**
				* Enumeration categoryOfAuthority
				*
				* The type of person, government agency or organisation granted powers of managing or controlling access to and/or activity in an area
				* @param int value
				* 
				* 1=customs
				* 2=border control
				* 3=police
				* 4=port
				* 5=immigration
				* 6=health
				* 7=coast guard
				* 8=agricultural
				* 9=military
				* 10=private company
				* 11=maritime police
				* 12=environmental
				* 13=fishery
				* 14=finance
				* 15=maritime
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "customs");
					$this->addValue(2, "border control");
					$this->addValue(3, "police");
					$this->addValue(4, "port");
					$this->addValue(5, "immigration");
					$this->addValue(6, "health");
					$this->addValue(7, "coast guard");
					$this->addValue(8, "agricultural");
					$this->addValue(9, "military");
					$this->addValue(10, "private company");
					$this->addValue(11, "maritime police");
					$this->addValue(12, "environmental");
					$this->addValue(13, "fishery");
					$this->addValue(14, "finance");
					$this->addValue(15, "maritime");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfCargo
			*
			* Classification of the different types of cargo that a ship may be carrying.
			* @property int value
			*/
			class categoryOfCargo extends EnumerationType
			{
				/**
				* Enumeration categoryOfCargo
				*
				* Classification of the different types of cargo that a ship may be carrying.
				* @param int value
				* 
				* 1=bulk
				* 2=container
				* 3=general
				* 4=liquid
				* 5=passenger
				* 6=livestock
				* 7=dangerous or hazardous
				* 8=heavy lift
				* 9=ballast
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "bulk");
					$this->addValue(2, "container");
					$this->addValue(3, "general");
					$this->addValue(4, "liquid");
					$this->addValue(5, "passenger");
					$this->addValue(6, "livestock");
					$this->addValue(7, "dangerous or hazardous");
					$this->addValue(8, "heavy lift");
					$this->addValue(9, "ballast");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfCommPref
			*
			* Classification of frequencies, VHF channels, telephone numbers, or other means of communication based on preference.
			* @property int value
			*/
			class categoryOfCommPref extends EnumerationType
			{
				/**
				* Enumeration categoryOfCommPref
				*
				* Classification of frequencies, VHF channels, telephone numbers, or other means of communication based on preference.
				* @param int value
				* 
				* 1=preferred calling
				* 2=alternate calling
				* 3=preferred working
				* 4=alternate working
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "preferred calling");
					$this->addValue(2, "alternate calling");
					$this->addValue(3, "preferred working");
					$this->addValue(4, "alternate working");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfConcentrationOfShippingHazardArea
			*
			* Classification of shipping hazards due to traffic volume or density.
			* @property int value
			*/
			class categoryOfConcentrationOfShippingHazardArea extends EnumerationType
			{
				/**
				* Enumeration categoryOfConcentrationOfShippingHazardArea
				*
				* Classification of shipping hazards due to traffic volume or density.
				* @param int value
				* 
				* 1=concentration of merchant shipping
				* 2=concentration of recreational vessels
				* 3=concentration of fishing vessels
				* 4=concentration of military vessels
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "concentration of merchant shipping");
					$this->addValue(2, "concentration of recreational vessels");
					$this->addValue(3, "concentration of fishing vessels");
					$this->addValue(4, "concentration of military vessels");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfDangerousOrHazardousCargo
			*
			* Classification of dangerous goods or hazardous materials based on the International Maritime Dangerous Goods Code (IMDG Code)
			* @property int value
			*/
			class categoryOfDangerousOrHazardousCargo extends EnumerationType
			{
				/**
				* Enumeration categoryOfDangerousOrHazardousCargo
				*
				* Classification of dangerous goods or hazardous materials based on the International Maritime Dangerous Goods Code (IMDG Code)
				* @param int value
				* 
				* 1=IMDG Code Class 1 Div. 1.1
				* 2=IMDG Code Class 1 Div. 1.2
				* 3=IMDG Code Class 1 Div. 1.3
				* 4=IMDG Code Class 1 Div. 1.4
				* 5=IMDG Code Class 1 Div. 1.5
				* 6=IMDG Code Class 1 Div. 1.6
				* 7=IMDG Code Class 2 Div. 2.1
				* 8=IMDG Code Class 2 Div. 2.2
				* 9=IMDG Code Class 2 Div. 2.3
				* 10=IMDG Code Class 3
				* 11=IMDG Code Class 4 Div. 4.1
				* 12=IMDG Code Class 4 Div. 4.2
				* 13=IMDG Code Class 4 Div. 4.3
				* 14=IMDG Code Class 5 Div. 5.1
				* 15=IMDG Code Class 5 Div. 5.2
				* 16=IMDG Code Class 6 Div. 6.1
				* 17=IMDG Code Class 6 Div. 6.2
				* 18=IMDG Code Class 7
				* 19=IMDG Code Class 8
				* 20=IMDG Code Class 9
				* 21=Harmful Substances in packaged form
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "IMDG Code Class 1 Div. 1.1");
					$this->addValue(2, "IMDG Code Class 1 Div. 1.2");
					$this->addValue(3, "IMDG Code Class 1 Div. 1.3");
					$this->addValue(4, "IMDG Code Class 1 Div. 1.4");
					$this->addValue(5, "IMDG Code Class 1 Div. 1.5");
					$this->addValue(6, "IMDG Code Class 1 Div. 1.6");
					$this->addValue(7, "IMDG Code Class 2 Div. 2.1");
					$this->addValue(8, "IMDG Code Class 2 Div. 2.2");
					$this->addValue(9, "IMDG Code Class 2 Div. 2.3");
					$this->addValue(10, "IMDG Code Class 3");
					$this->addValue(11, "IMDG Code Class 4 Div. 4.1");
					$this->addValue(12, "IMDG Code Class 4 Div. 4.2");
					$this->addValue(13, "IMDG Code Class 4 Div. 4.3");
					$this->addValue(14, "IMDG Code Class 5 Div. 5.1");
					$this->addValue(15, "IMDG Code Class 5 Div. 5.2");
					$this->addValue(16, "IMDG Code Class 6 Div. 6.1");
					$this->addValue(17, "IMDG Code Class 6 Div. 6.2");
					$this->addValue(18, "IMDG Code Class 7");
					$this->addValue(19, "IMDG Code Class 8");
					$this->addValue(20, "IMDG Code Class 9");
					$this->addValue(21, "Harmful Substances in packaged form");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfMaritimeBroadcast
			*
			* Classification of maritime broadcast based on the nature of information conveyed.
			* @property int value
			*/
			class categoryOfMaritimeBroadcast extends EnumerationType
			{
				/**
				* Enumeration categoryOfMaritimeBroadcast
				*
				* Classification of maritime broadcast based on the nature of information conveyed.
				* @param int value
				* 
				* 1=navigational warning
				* 2=meteorological warning
				* 3=ice report
				* 4=SAR information
				* 5=pirate attack warning
				* 6=meteorological forecast
				* 7=pilot service message
				* 8=AIS information
				* 9=LORAN message
				* 10=SATNAV message
				* 11=gale warning
				* 12=storm warning
				* 13=tropical revolving storm warning
				* 14=NAVAREA warning
				* 15=coastal warning
				* 16=local warning
				* 17=low water level warning/negative tidal surge
				* 18=icing warning
				* 19=tsunami broadcast
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "navigational warning");
					$this->addValue(2, "meteorological warning");
					$this->addValue(3, "ice report");
					$this->addValue(4, "SAR information");
					$this->addValue(5, "pirate attack warning");
					$this->addValue(6, "meteorological forecast");
					$this->addValue(7, "pilot service message");
					$this->addValue(8, "AIS information");
					$this->addValue(9, "LORAN message");
					$this->addValue(10, "SATNAV message");
					$this->addValue(11, "gale warning");
					$this->addValue(12, "storm warning");
					$this->addValue(13, "tropical revolving storm warning");
					$this->addValue(14, "NAVAREA warning");
					$this->addValue(15, "coastal warning");
					$this->addValue(16, "local warning");
					$this->addValue(17, "low water level warning/negative tidal surge");
					$this->addValue(18, "icing warning");
					$this->addValue(19, "tsunami broadcast");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfMilitaryPracticeArea
			*
			* Classification of area by military use.
			* @property int value
			*/
			class categoryOfMilitaryPracticeArea extends EnumerationType
			{
				/**
				* Enumeration categoryOfMilitaryPracticeArea
				*
				* Classification of area by military use.
				* @param int value
				* 
				* 2=torpedo exercise area
				* 3=submarine exercise area
				* 4=firing danger area
				* 5=mine-laying practice area
				* 6=small arms firing range
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(2, "torpedo exercise area");
					$this->addValue(3, "submarine exercise area");
					$this->addValue(4, "firing danger area");
					$this->addValue(5, "mine-laying practice area");
					$this->addValue(6, "small arms firing range");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfNavigationLine
			*
			* Classification of route guidance given to vessels
			* @property int value
			*/
			class categoryOfNavigationLine extends EnumerationType
			{
				/**
				* Enumeration categoryOfNavigationLine
				*
				* Classification of route guidance given to vessels
				* @param int value
				* 
				* 1=clearing line
				* 2=transit line
				* 3=leading line bearing a recommended track
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "clearing line");
					$this->addValue(2, "transit line");
					$this->addValue(3, "leading line bearing a recommended track");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfPilot
			*
			* Classification of pilots and pilot services by type of waterway where piloting services are provided.
			* @property int value
			*/
			class categoryOfPilot extends EnumerationType
			{
				/**
				* Enumeration categoryOfPilot
				*
				* Classification of pilots and pilot services by type of waterway where piloting services are provided.
				* @param int value
				* 
				* 1=pilot
				* 2=deep sea
				* 3=harbour
				* 4=bar
				* 5=river
				* 6=channel
				* 7=lake
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "pilot");
					$this->addValue(2, "deep sea");
					$this->addValue(3, "harbour");
					$this->addValue(4, "bar");
					$this->addValue(5, "river");
					$this->addValue(6, "channel");
					$this->addValue(7, "lake");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfPilotBoardingPlace
			*
			* 
			* @property int value
			*/
			class categoryOfPilotBoardingPlace extends EnumerationType
			{
				/**
				* Enumeration categoryOfPilotBoardingPlace
				*
				* 
				* @param int value
				* 
				* 1=boarding by pilot-cruising vessel
				* 2=boarding by helicopter
				* 3=pilot comes out from shore
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "boarding by pilot-cruising vessel");
					$this->addValue(2, "boarding by helicopter");
					$this->addValue(3, "pilot comes out from shore");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfPreference
			*
			* The selection of a first choice compared to other options.
			* @property int value
			*/
			class categoryOfPreference extends EnumerationType
			{
				/**
				* Enumeration categoryOfPreference
				*
				* The selection of a first choice compared to other options.
				* @param int value
				* 
				* 1=primary
				* 2=alternate
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "primary");
					$this->addValue(2, "alternate");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfRadioMethods
			*
			* Categories of radiocommunications based on frequency band and radio traffic method.
			* @property int value
			*/
			class categoryOfRadioMethods extends EnumerationType
			{
				/**
				* Enumeration categoryOfRadioMethods
				*
				* Categories of radiocommunications based on frequency band and radio traffic method.
				* @param int value
				* 
				* 1=Low Frequency (LF) voice traffic
				* 2=Medium Frequency (MF) voice traffic
				* 3=High Frequency (HF) voice traffic
				* 4=Very High Frequency (VHF) voice traffic
				* 5=High Frequency Narrow Band Direct Printing
				* 6=NAVTEX
				* 7=SafetyNET
				* 8=NBDP Telegraphy (Narrow Band Direct Printing Telegraphy)
				* 9=facsimile
				* 10=NAVIP
				* 11=Low Frequency (LF) digital traffic
				* 12=Medium Frequency (MF) digital traffic
				* 13=High Frequency (HF) digital traffic
				* 14=Very High Frequency (VHF) digital traffic
				* 15=Low Frequency (LF) telegraph traffic
				* 16=Medium Frequency (MF) telegraph traffic
				* 17=High Frequency (HF) telegraph traffic
				* 18=Medium Frequency (MF) Digital Selective Call traffic
				* 19=High Frequency (HF) Digital Selective Call traffic
				* 20=Very High Frequency (VHF) Digital Selective Call traffic
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "Low Frequency (LF) voice traffic");
					$this->addValue(2, "Medium Frequency (MF) voice traffic");
					$this->addValue(3, "High Frequency (HF) voice traffic");
					$this->addValue(4, "Very High Frequency (VHF) voice traffic");
					$this->addValue(5, "High Frequency Narrow Band Direct Printing");
					$this->addValue(6, "NAVTEX");
					$this->addValue(7, "SafetyNET");
					$this->addValue(8, "NBDP Telegraphy (Narrow Band Direct Printing Telegraphy)");
					$this->addValue(9, "facsimile");
					$this->addValue(10, "NAVIP");
					$this->addValue(11, "Low Frequency (LF) digital traffic");
					$this->addValue(12, "Medium Frequency (MF) digital traffic");
					$this->addValue(13, "High Frequency (HF) digital traffic");
					$this->addValue(14, "Very High Frequency (VHF) digital traffic");
					$this->addValue(15, "Low Frequency (LF) telegraph traffic");
					$this->addValue(16, "Medium Frequency (MF) telegraph traffic");
					$this->addValue(17, "High Frequency (HF) telegraph traffic");
					$this->addValue(18, "Medium Frequency (MF) Digital Selective Call traffic");
					$this->addValue(19, "High Frequency (HF) Digital Selective Call traffic");
					$this->addValue(20, "Very High Frequency (VHF) Digital Selective Call traffic");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfRelationship
			*
			* Expresses constraints or requirements on vessel actions or activities in relation to a geographic feature, facility, or service
			* @property int value
			*/
			class categoryOfRelationship extends EnumerationType
			{
				/**
				* Enumeration categoryOfRelationship
				*
				* Expresses constraints or requirements on vessel actions or activities in relation to a geographic feature, facility, or service
				* @param int value
				* 
				* 1=prohibited
				* 2=not recommended
				* 3=permitted
				* 4=recommended
				* 5=required
				* 6=not required
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "prohibited");
					$this->addValue(2, "not recommended");
					$this->addValue(3, "permitted");
					$this->addValue(4, "recommended");
					$this->addValue(5, "required");
					$this->addValue(6, "not required");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfRestrictedArea
			*
			* The official legal status of each kind of restricted area defines the kind of restriction(s), e.g., the restriction for a 'game preserve' may be 'entering prohibited', the restriction for an 'anchoring prohibition area' is 'anchoring prohibited'.
			* @property int value
			*/
			class categoryOfRestrictedArea extends EnumerationType
			{
				/**
				* Enumeration categoryOfRestrictedArea
				*
				* The official legal status of each kind of restricted area defines the kind of restriction(s), e.g., the restriction for a 'game preserve' may be 'entering prohibited', the restriction for an 'anchoring prohibition area' is 'anchoring prohibited'.
				* @param int value
				* 
				* 1=offshore safety zone
				* 4=nature reserve
				* 5=bird sanctuary
				* 6=game reserve
				* 7=seal sanctuary
				* 8=degaussing range
				* 9=military area
				* 10=historic wreck area
				* 12=navigational aid safety zone
				* 14=minefield
				* 19=waiting area
				* 20=research area
				* 22=fish sanctuary
				* 23=ecological reserve
				* 25=swinging area
				* 27=environmentally sensitive sea area
				* 28=particularly sensitive sea area
				* 29=disengagement area
				* 30=port security area
				* 31=coral sanctuary
				* 32=recreation area
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "offshore safety zone");
					$this->addValue(4, "nature reserve");
					$this->addValue(5, "bird sanctuary");
					$this->addValue(6, "game reserve");
					$this->addValue(7, "seal sanctuary");
					$this->addValue(8, "degaussing range");
					$this->addValue(9, "military area");
					$this->addValue(10, "historic wreck area");
					$this->addValue(12, "navigational aid safety zone");
					$this->addValue(14, "minefield");
					$this->addValue(19, "waiting area");
					$this->addValue(20, "research area");
					$this->addValue(22, "fish sanctuary");
					$this->addValue(23, "ecological reserve");
					$this->addValue(25, "swinging area");
					$this->addValue(27, "environmentally sensitive sea area");
					$this->addValue(28, "particularly sensitive sea area");
					$this->addValue(29, "disengagement area");
					$this->addValue(30, "port security area");
					$this->addValue(31, "coral sanctuary");
					$this->addValue(32, "recreation area");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfRouteingMeasure
			*
			* Classification of routeing measures by type.
			* @property int value
			*/
			class categoryOfRouteingMeasure extends EnumerationType
			{
				/**
				* Enumeration categoryOfRouteingMeasure
				*
				* Classification of routeing measures by type.
				* @param int value
				* 
				* 1=archipelagic sea lane
				* 2=deep water route
				* 3=fairway system
				* 4=recommended route
				* 5=traffic separation scheme
				* 6=two-way route
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "archipelagic sea lane");
					$this->addValue(2, "deep water route");
					$this->addValue(3, "fairway system");
					$this->addValue(4, "recommended route");
					$this->addValue(5, "traffic separation scheme");
					$this->addValue(6, "two-way route");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfShipReport
			*
			* Classification of ship reports based on IMO standard report formats.
			* @property int value
			*/
			class categoryOfShipReport extends EnumerationType
			{
				/**
				* Enumeration categoryOfShipReport
				*
				* Classification of ship reports based on IMO standard report formats.
				* @param int value
				* 
				* 1=sailing plan
				* 2=position report
				* 3=deviation report
				* 4=final report
				* 5=dangerous goods report
				* 6=harmful substances report
				* 7=marine pollutants report
				* 8=any other report
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "sailing plan");
					$this->addValue(2, "position report");
					$this->addValue(3, "deviation report");
					$this->addValue(4, "final report");
					$this->addValue(5, "dangerous goods report");
					$this->addValue(6, "harmful substances report");
					$this->addValue(7, "marine pollutants report");
					$this->addValue(8, "any other report");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfSignalStationTraffic
			*
			* Classification of station based on the traffic service provided
			* @property int value
			*/
			class categoryOfSignalStationTraffic extends EnumerationType
			{
				/**
				* Enumeration categoryOfSignalStationTraffic
				*
				* Classification of station based on the traffic service provided
				* @param int value
				* 
				* 1=port control
				* 2=port entry and departure
				* 3=International Port Traffic
				* 4=berthing
				* 5=dock
				* 6=lock
				* 7=flood barrage
				* 8=bridge passage
				* 9=dredging
				* 10=traffic control light
				* 13=oncoming traffic indication
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "port control");
					$this->addValue(2, "port entry and departure");
					$this->addValue(3, "International Port Traffic");
					$this->addValue(4, "berthing");
					$this->addValue(5, "dock");
					$this->addValue(6, "lock");
					$this->addValue(7, "flood barrage");
					$this->addValue(8, "bridge passage");
					$this->addValue(9, "dredging");
					$this->addValue(10, "traffic control light");
					$this->addValue(13, "oncoming traffic indication");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfSignalStationWarning
			*
			* Classification of station based on the warning service provided
			* @property int value
			*/
			class categoryOfSignalStationWarning extends EnumerationType
			{
				/**
				* Enumeration categoryOfSignalStationWarning
				*
				* Classification of station based on the warning service provided
				* @param int value
				* 
				* 1=danger
				* 2=maritime obstruction
				* 3=cable
				* 4=military practice
				* 5=distress
				* 6=weather
				* 7=storm
				* 8=ice
				* 9=time
				* 10=tide
				* 11=tidal stream
				* 12=tide gauge
				* 13=tide scale
				* 14=diving
				* 15=water level gauge
				* 16=vertical clearance indication
				* 17=high water mark
				* 18=depth indication
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "danger");
					$this->addValue(2, "maritime obstruction");
					$this->addValue(3, "cable");
					$this->addValue(4, "military practice");
					$this->addValue(5, "distress");
					$this->addValue(6, "weather");
					$this->addValue(7, "storm");
					$this->addValue(8, "ice");
					$this->addValue(9, "time");
					$this->addValue(10, "tide");
					$this->addValue(11, "tidal stream");
					$this->addValue(12, "tide gauge");
					$this->addValue(13, "tide scale");
					$this->addValue(14, "diving");
					$this->addValue(15, "water level gauge");
					$this->addValue(16, "vertical clearance indication");
					$this->addValue(17, "high water mark");
					$this->addValue(18, "depth indication");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfTrafficSeparationScheme
			*
			* International classification of traffic separation scheme
			* @property int value
			*/
			class categoryOfTrafficSeparationScheme extends EnumerationType
			{
				/**
				* Enumeration categoryOfTrafficSeparationScheme
				*
				* International classification of traffic separation scheme
				* @param int value
				* 
				* 1=IMO - Adopted
				* 2=not IMO - adopted
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "IMO - Adopted");
					$this->addValue(2, "not IMO - adopted");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfTemporalVariation
			*
			* An assessment of the likelihood of change over time.
			* @property int value
			*/
			class categoryOfTemporalVariation extends EnumerationType
			{
				/**
				* Enumeration categoryOfTemporalVariation
				*
				* An assessment of the likelihood of change over time.
				* @param int value
				* 
				* 1=Extreme Event
				* 4=Likely to Change
				* 5=Unlikely to Change
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "Extreme Event");
					$this->addValue(4, "Likely to Change");
					$this->addValue(5, "Unlikely to Change");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfText
			*
			* Classification of completeness of textual information in relation to the source.
			* @property int value
			*/
			class categoryOfText extends EnumerationType
			{
				/**
				* Enumeration categoryOfText
				*
				* Classification of completeness of textual information in relation to the source.
				* @param int value
				* 
				* 1=abstract or summary
				* 2=extract
				* 3=full text
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "abstract or summary");
					$this->addValue(2, "extract");
					$this->addValue(3, "full text");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfVesselRegistry
			*
			* The locality of vessel registration or enrolment relative to the nationality of a port, territorial sea, administrative area, exclusive zone or other location.
			* @property int value
			*/
			class categoryOfVesselRegistry extends EnumerationType
			{
				/**
				* Enumeration categoryOfVesselRegistry
				*
				* The locality of vessel registration or enrolment relative to the nationality of a port, territorial sea, administrative area, exclusive zone or other location.
				* @param int value
				* 
				* 1=domestic
				* 2=foreign
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "domestic");
					$this->addValue(2, "foreign");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration categoryOfVesselTrafficService
			*
			* Classification of vessel traffic services based on the nature of the control or services provided.
			* @property int value
			*/
			class categoryOfVesselTrafficService extends EnumerationType
			{
				/**
				* Enumeration categoryOfVesselTrafficService
				*
				* Classification of vessel traffic services based on the nature of the control or services provided.
				* @param int value
				* 
				* 1=Information Service
				* 2=Traffic Organisation Service
				* 3=Navigational Assistance Service
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "Information Service");
					$this->addValue(2, "Traffic Organisation Service");
					$this->addValue(3, "Navigational Assistance Service");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute cityName
			*
			* The name of a town or city.
			* @property int value
			*/
			class cityName extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute communicationChannel
			*
			* A channel number assigned to a specific radio frequency, frequencies or frequency band.
			* @property int value
			*/
			class communicationChannel extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration comparisonOperator
			*
			* Numerical comparison
			* @property int value
			*/
			class comparisonOperator extends EnumerationType
			{
				/**
				* Enumeration comparisonOperator
				*
				* Numerical comparison
				* @param int value
				* 
				* 1=greater than
				* 2=greater than or equal to
				* 3=less than
				* 4=less than or equal to
				* 5=equal to
				* 6=not equal to
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "greater than");
					$this->addValue(2, "greater than or equal to");
					$this->addValue(3, "less than");
					$this->addValue(4, "less than or equal to");
					$this->addValue(5, "equal to");
					$this->addValue(6, "not equal to");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration condition
			*
			* The various conditions of buildings and other constructions.
			* @property int value
			*/
			class condition extends EnumerationType
			{
				/**
				* Enumeration condition
				*
				* The various conditions of buildings and other constructions.
				* @param int value
				* 
				* 1=under construction
				* 3=under reclamation
				* 5=planned construction
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "under construction");
					$this->addValue(3, "under reclamation");
					$this->addValue(5, "planned construction");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute contactInstructions
			*
			* Instructions provided on how to contact a particular person, organisation or service.
			* @property int value
			*/
			class contactInstructions extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute countryName
			*
			* The name of a nation.
			* @property int value
			*/
			class countryName extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration dayOfWeek
			*
			* Days of the week.
			* @property int value
			*/
			class dayOfWeek extends EnumerationType
			{
				/**
				* Enumeration dayOfWeek
				*
				* Days of the week.
				* @param int value
				* 
				* 1=Sunday
				* 2=Monday
				* 3=Tuesday
				* 4=Wednesday
				* 5=Thursday
				* 6=Friday
				* 7=Saturday
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "Sunday");
					$this->addValue(2, "Monday");
					$this->addValue(3, "Tuesday");
					$this->addValue(4, "Wednesday");
					$this->addValue(5, "Thursday");
					$this->addValue(6, "Friday");
					$this->addValue(7, "Saturday");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute dayOfWeekIsRange
			*
			* A statement expressing if the days of the week identified define a range or not.
			* @property int value
			*/
			class dayOfWeekIsRange extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_boolean($value);
				}
			}
         
			/**
			* SimpleAttribute dateEnd
			*
			* The latest date on which an object (e.g., a buoy) will be present.
			* @property int value
			*/
			class dateEnd extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_S100_TruncatedDate($value);
				}
			}
         
			/**
			* SimpleAttribute dateStart
			*
			* The earliest date on which an object (e.g., a buoy) will be present.
			* @property int value
			*/
			class dateStart extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_S100_TruncatedDate($value);
				}
			}
         
			/**
			* SimpleAttribute deliveryPoint
			*
			* Details of where post can be delivered such as the apartment, name and/or number of a street, building or PO Box.
			* @property int value
			*/
			class deliveryPoint extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute destination
			*
			* The place or general direction to which a vessel is going or directed.
			* @property int value
			*/
			class destination extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute displayName
			*
			* A statement expressing if a feature name is to be displayed in certain system display settings or not
			* @property int value
			*/
			class displayName extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_boolean($value);
				}
			}
         
			/**
			* SimpleAttribute distance
			*
			* A numeric measure of the spatial separation between two locations.
			* @property int value
			*/
			class distance extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* Enumeration dynamicResource
			*
			* Whether a vessel must use a shore-based or other resource to obtain up-to-date information.
			* @property int value
			*/
			class dynamicResource extends EnumerationType
			{
				/**
				* Enumeration dynamicResource
				*
				* Whether a vessel must use a shore-based or other resource to obtain up-to-date information.
				* @param int value
				* 
				* 1=static
				* 2=mandatory external dynamic
				* 3=optional external dynamic
				* 4=onboard dynamic
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "static");
					$this->addValue(2, "mandatory external dynamic");
					$this->addValue(3, "optional external dynamic");
					$this->addValue(4, "onboard dynamic");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute fileLocator
			*
			* The string encodes the location of a fragment of text or other information in a support file.
			* @property int value
			*/
			class fileLocator extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute fileReference
			*
			* The string encodes the file name of an external text file that contains the text in English
			* @property int value
			*/
			class fileReference extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute dateFixed
			*
			* The date of an event.
			* @property int value
			*/
			class dateFixed extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_S100_TruncatedDate($value);
				}
			}
         
			/**
			* SimpleAttribute flipBearing
			*
			* The bearing at which text is re-located to the opposite side of a feature when screen display is oriented away from true north.
			* @property int value
			*/
			class flipBearing extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute frequencyShoreStationReceives
			*
			* The shore station receiver frequency expressed in kHz to one decimal place.
			* @property int value
			*/
			class frequencyShoreStationReceives extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute frequencyShoreStationTransmits
			*
			* The shore station transmitter frequency expressed in kHz to one decimal place.
			* @property int value
			*/
			class frequencyShoreStationTransmits extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute headline
			*
			* Words set at the head of a passage or page to introduce or categorize
			* @property int value
			*/
			class headline extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute horizontalDistanceUncertainty
			*
			* The best estimate of the horizontal accuracy of horizontal clearances and distances.
			* @property int value
			*/
			class horizontalDistanceUncertainty extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute imoFormatForReporting
			*
			* Whether a report must be in an IMO standard format
			* @property int value
			*/
			class imoFormatForReporting extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_boolean($value);
				}
			}
         
			/**
			* Enumeration ispsLevel
			*
			* Classification of ISPS security levels according to the ISPS Code.
			* @property int value
			*/
			class ispsLevel extends EnumerationType
			{
				/**
				* Enumeration ispsLevel
				*
				* Classification of ISPS security levels according to the ISPS Code.
				* @param int value
				* 
				* 1=ISPS Level 1
				* 2=ISPS Level 2
				* 3=ISPS Level 3
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "ISPS Level 1");
					$this->addValue(2, "ISPS Level 2");
					$this->addValue(3, "ISPS Level 3");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration jurisdiction
			*
			* The jurisdiction applicable to an administrative area.
			* @property int value
			*/
			class jurisdiction extends EnumerationType
			{
				/**
				* Enumeration jurisdiction
				*
				* The jurisdiction applicable to an administrative area.
				* @param int value
				* 
				* 1=international
				* 2=national
				* 3=national sub-division
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "international");
					$this->addValue(2, "national");
					$this->addValue(3, "national sub-division");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute language
			*
			* The method of human communication, either spoken or written, consisting of the use of words in a structured and conventional way.
			* @property int value
			*/
			class language extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration logicalConnectives
			*
			* Expresses whether all the constraints described by its co-attributes must be satisfied, or only one such constraint need be satisfied.
			* @property int value
			*/
			class logicalConnectives extends EnumerationType
			{
				/**
				* Enumeration logicalConnectives
				*
				* Expresses whether all the constraints described by its co-attributes must be satisfied, or only one such constraint need be satisfied.
				* @param int value
				* 
				* 1=logical conjunction
				* 2=logical disjunction
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "logical conjunction");
					$this->addValue(2, "logical disjunction");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute linkage
			*
			* location (address) for on-line access using a URL/URI address or similar addressing scheme. (Adapted from ISO 19115:2014.)
			* @property int value
			*/
			class linkage extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_URL($value);
				}
			}
         
			/**
			* Enumeration membership
			*
			* indicates whether a vessel is included or excluded from the regulation / restriction / recommendation / nautical information
			* @property int value
			*/
			class membership extends EnumerationType
			{
				/**
				* Enumeration membership
				*
				* indicates whether a vessel is included or excluded from the regulation / restriction / recommendation / nautical information
				* @param int value
				* 
				* 1=included
				* 2=excluded
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "included");
					$this->addValue(2, "excluded");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute mMSICode
			*
			* The Maritime Mobile Service Identity (MMSI) Code is formed of a series of nine digits which are transmitted over the radio path in order to uniquely identify ship stations, ship earth stations,coast stations, coast earth stations, and group calls. These identities are formed in such a way that the identity or part thereof can be used by telephone and telex subscribers connected to the general telecommunications network principally to call ships automatically.
			* @property int value
			*/
			class mMSICode extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute nationality
			*
			* The nationality of the specific object.
			* @property int value
			*/
			class nationality extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute noticeTimeHours
			*
			* The time duration prior to the time the service is needed, when notice must be provided to the service provider.
			* @property int value
			*/
			class noticeTimeHours extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute noticeTimeText
			*
			* Text string qualifying the notice time specified in NTCHRS. This may explain the time specification in NTCHRS (e.g., “3 working days” for a NTCHRS value of “72” where NTCTIM is supposed to be "3 working days") or consist of other language qualifying the time, e.g., “On departure from last port” or “On passing reporting line XY”).
			* @property int value
			*/
			class noticeTimeText extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute name
			*
			* The individual name of a feature.
			* @property int value
			*/
			class name extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute nameOfResource
			*
			* Name of the online resource.
			* @property int value
			*/
			class nameOfResource extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute onlineResourceDescription
			*
			* Detailed text description of what the online resource is/does
			* @property int value
			*/
			class onlineResourceDescription extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration operation
			*
			* Indicates whether the minimum or maximum value should be used to describe a condition or in application processing
			* @property int value
			*/
			class operation extends EnumerationType
			{
				/**
				* Enumeration operation
				*
				* Indicates whether the minimum or maximum value should be used to describe a condition or in application processing
				* @param int value
				* 
				* 1=largest value
				* 2=smallest value
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "largest value");
					$this->addValue(2, "smallest value");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute orientationUncertainty
			*
			* The best estimate of the accuracy of a bearing.
			* @property int value
			*/
			class orientationUncertainty extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute pictureCaption
			*
			* Short description of the purpose of the image
			* @property int value
			*/
			class pictureCaption extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute pictureInformation
			*
			* A set of information to provide credits to picture creator, copyright owner etc.
			* @property int value
			*/
			class pictureInformation extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration pilotMovement
			*
			* Classification of pilot activity by arrival, departure, or change of pilot. It may also describe the place where the pilot's advice begins, ends, or is transferred to a different pilot.
			* @property int value
			*/
			class pilotMovement extends EnumerationType
			{
				/**
				* Enumeration pilotMovement
				*
				* Classification of pilot activity by arrival, departure, or change of pilot. It may also describe the place where the pilot's advice begins, ends, or is transferred to a different pilot.
				* @param int value
				* 
				* 1=embarkation
				* 2=disembarkation
				* 3=pilot change
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "embarkation");
					$this->addValue(2, "disembarkation");
					$this->addValue(3, "pilot change");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration pilotQualification
			*
			* Classification of pilots and pilot services by type of license qualification or type of organization providing services.
			* @property int value
			*/
			class pilotQualification extends EnumerationType
			{
				/**
				* Enumeration pilotQualification
				*
				* Classification of pilots and pilot services by type of license qualification or type of organization providing services.
				* @param int value
				* 
				* 1=government pilot
				* 2=pilot approved by government
				* 3=state pilot
				* 4=federal pilot
				* 5=company pilot
				* 6=local pilot
				* 7=citizen with sufficient local knowledge
				* 8=citizen with doubtful local knowledge
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "government pilot");
					$this->addValue(2, "pilot approved by government");
					$this->addValue(3, "state pilot");
					$this->addValue(4, "federal pilot");
					$this->addValue(5, "company pilot");
					$this->addValue(6, "local pilot");
					$this->addValue(7, "citizen with sufficient local knowledge");
					$this->addValue(8, "citizen with doubtful local knowledge");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute pilotRequest
			*
			* Description of the pilot request procedure.
			* @property int value
			*/
			class pilotRequest extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute pilotVessel
			*
			* Description of the pilot vessel. The pilot vessel is a small vessel used by a pilot to go to or from a vessel employing the pilot's services.
			* @property int value
			*/
			class pilotVessel extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute postalCode
			*
			* Known in various countries as a postcode, or ZIP code, the postal code is a series of letters and/or digits that identifies each postal delivery area.
			* @property int value
			*/
			class postalCode extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute protocol
			*
			* connection protocol to be used. Example: ftp, http get KVP, http POST, etc.
			* @property int value
			*/
			class protocol extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute protocolRequest
			*
			* Request used to access the resource. Structure and content depend on the protocol and standard used by the online resource, such as Web Feature Service standard.
			* @property int value
			*/
			class protocolRequest extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute remotePilot
			*
			* Whether remote pilot services are available.
			* @property int value
			*/
			class remotePilot extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_boolean($value);
				}
			}
         
			/**
			* SimpleAttribute reportedDate
			*
			* The date that the item was observed, done, or investigated
			* @property int value
			*/
			class reportedDate extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_S100_TruncatedDate($value);
				}
			}
         
			/**
			* SimpleAttribute requirementsForMaintenanceOfListeningWatch
			*
			* Description of continuous listening watch requirements.
			* @property int value
			*/
			class requirementsForMaintenanceOfListeningWatch extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration restriction
			*
			* The official legal statute of each kind of restricted area.
			* @property int value
			*/
			class restriction extends EnumerationType
			{
				/**
				* Enumeration restriction
				*
				* The official legal statute of each kind of restricted area.
				* @param int value
				* 
				* 1=anchoring prohibited
				* 2=anchoring restricted
				* 3=fishing prohibited
				* 4=fishing restricted
				* 5=trawling prohibited
				* 6=trawling restricted
				* 7=entry prohibited
				* 8=entry restricted
				* 9=dredging prohibited
				* 10=dredging restricted
				* 11=diving prohibited
				* 12=diving restricted
				* 13=no wake
				* 14=area to be avoided
				* 15=construction prohibited
				* 16=discharging prohibited
				* 17=discharging restricted
				* 18=industrial or mineral exploration/development prohibited
				* 19=industrial or mineral exploration/development restricted
				* 20=drilling prohibited
				* 21=drilling restricted
				* 22=removal of historical artifacts prohibited
				* 23=cargo transhipment (lightering) prohibited
				* 24=dragging prohibited
				* 25=stopping prohibited
				* 26=landing prohibited
				* 27=speed restricted
				* 28=overtaking prohibited
				* 29=overtaking of convoys by convoys prohibited
				* 30=passing or overtaking prohibited
				* 31=berthing prohibited
				* 32=berthing restricted
				* 33=making fast prohibited
				* 34=making fast restricted
				* 35=turning prohibited
				* 36=restricted fairway depth
				* 37=restricted fairway width
				* 38=use of spuds prohibited
				* 39=swimming prohibited
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "anchoring prohibited");
					$this->addValue(2, "anchoring restricted");
					$this->addValue(3, "fishing prohibited");
					$this->addValue(4, "fishing restricted");
					$this->addValue(5, "trawling prohibited");
					$this->addValue(6, "trawling restricted");
					$this->addValue(7, "entry prohibited");
					$this->addValue(8, "entry restricted");
					$this->addValue(9, "dredging prohibited");
					$this->addValue(10, "dredging restricted");
					$this->addValue(11, "diving prohibited");
					$this->addValue(12, "diving restricted");
					$this->addValue(13, "no wake");
					$this->addValue(14, "area to be avoided");
					$this->addValue(15, "construction prohibited");
					$this->addValue(16, "discharging prohibited");
					$this->addValue(17, "discharging restricted");
					$this->addValue(18, "industrial or mineral exploration/development prohibited");
					$this->addValue(19, "industrial or mineral exploration/development restricted");
					$this->addValue(20, "drilling prohibited");
					$this->addValue(21, "drilling restricted");
					$this->addValue(22, "removal of historical artifacts prohibited");
					$this->addValue(23, "cargo transhipment (lightering) prohibited");
					$this->addValue(24, "dragging prohibited");
					$this->addValue(25, "stopping prohibited");
					$this->addValue(26, "landing prohibited");
					$this->addValue(27, "speed restricted");
					$this->addValue(28, "overtaking prohibited");
					$this->addValue(29, "overtaking of convoys by convoys prohibited");
					$this->addValue(30, "passing or overtaking prohibited");
					$this->addValue(31, "berthing prohibited");
					$this->addValue(32, "berthing restricted");
					$this->addValue(33, "making fast prohibited");
					$this->addValue(34, "making fast restricted");
					$this->addValue(35, "turning prohibited");
					$this->addValue(36, "restricted fairway depth");
					$this->addValue(37, "restricted fairway width");
					$this->addValue(38, "use of spuds prohibited");
					$this->addValue(39, "swimming prohibited");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute scaleMinimum
			*
			* The minimum scale at which the object may be used, e.g., for ECDIS presentation.
			* @property int value
			*/
			class scaleMinimum extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute serviceAccessProcedure
			*
			* A description of the procedure to access the marine service.
			* @property int value
			*/
			class serviceAccessProcedure extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute signalFrequency
			*
			* The frequency of a signal.
			* @property int value
			*/
			class signalFrequency extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute siltationRate
			*
			* A description of the rate at which the depth in an area decreases.
			* @property int value
			*/
			class siltationRate extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute source
			*
			* An identifier (publication, document, reference work, instrument, vessel, etc) from which information comes or is acquired.
			* @property int value
			*/
			class source extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration sourceType
			*
			* type of the source
			* @property int value
			*/
			class sourceType extends EnumerationType
			{
				/**
				* Enumeration sourceType
				*
				* type of the source
				* @param int value
				* 
				* 1=law or regulation
				* 2=official publication
				* 7=mariner report, confirmed
				* 8=mariner report, not confirmed
				* 9=industry publications and reports
				* 10=remotely sensed images
				* 11=photographs
				* 12=products issued by HO services
				* 13=news media
				* 14=traffic data
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "law or regulation");
					$this->addValue(2, "official publication");
					$this->addValue(7, "mariner report, confirmed");
					$this->addValue(8, "mariner report, not confirmed");
					$this->addValue(9, "industry publications and reports");
					$this->addValue(10, "remotely sensed images");
					$this->addValue(11, "photographs");
					$this->addValue(12, "products issued by HO services");
					$this->addValue(13, "news media");
					$this->addValue(14, "traffic data");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration status
			*
			* The condition of an object at a given instant in time.
			* @property int value
			*/
			class status extends EnumerationType
			{
				/**
				* Enumeration status
				*
				* The condition of an object at a given instant in time.
				* @param int value
				* 
				* 1=permanent
				* 2=occasional
				* 3=recommended
				* 4=not in use
				* 5=periodic/intermittent
				* 6=reserved
				* 7=temporary
				* 8=private
				* 9=mandatory
				* 11=extinguished
				* 12=illuminated
				* 13=historic
				* 14=public
				* 15=synchronized
				* 16=watched
				* 17=un-watched
				* 18=existence doubtful
				* 28=buoyed
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "permanent");
					$this->addValue(2, "occasional");
					$this->addValue(3, "recommended");
					$this->addValue(4, "not in use");
					$this->addValue(5, "periodic/intermittent");
					$this->addValue(6, "reserved");
					$this->addValue(7, "temporary");
					$this->addValue(8, "private");
					$this->addValue(9, "mandatory");
					$this->addValue(11, "extinguished");
					$this->addValue(12, "illuminated");
					$this->addValue(13, "historic");
					$this->addValue(14, "public");
					$this->addValue(15, "synchronized");
					$this->addValue(16, "watched");
					$this->addValue(17, "un-watched");
					$this->addValue(18, "existence doubtful");
					$this->addValue(28, "buoyed");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute telecommunicationIdentifier
			*
			* An identifier, such as words, numbers, letters, symbols, or any combination of those used to establish a contact to a particular person, organisation or service.
			* @property int value
			*/
			class telecommunicationIdentifier extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute telcomCarrier
			*
			* The name of a provider or type of carrier for a telecommunication service. This service may include land line based, shore based or satellite based radio connections.
			* @property int value
			*/
			class telcomCarrier extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute text
			*
			* A non-formatted digital text string
			* @property int value
			*/
			class text extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute thicknessOfIceCapability
			*
			* The thickness of ice that the ship can safely transit
			* @property int value
			*/
			class thicknessOfIceCapability extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute timeOfDayEnd
			*
			* Ending time of day, possibly for a period within the day
			* @property int value
			*/
			class timeOfDayEnd extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_time($value);
				}
			}
         
			/**
			* SimpleAttribute timeOfDayStart
			*
			* Starting time of day, possibly for a period within the day
			* @property int value
			*/
			class timeOfDayStart extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_time($value);
				}
			}
         
			/**
			* Enumeration trafficFlow
			*
			* Direction of vessels passing a reference point.
			* @property int value
			*/
			class trafficFlow extends EnumerationType
			{
				/**
				* Enumeration trafficFlow
				*
				* Direction of vessels passing a reference point.
				* @param int value
				* 
				* 1=inbound
				* 2=outbound
				* 3=one-way
				* 4=two-way
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "inbound");
					$this->addValue(2, "outbound");
					$this->addValue(3, "one-way");
					$this->addValue(4, "two-way");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute uncertaintyFixed
			*
			* The best estimate of the fixed horizontal or vertical accuracy component for positions, depths, heights, vertical distances and vertical clearances.
			* @property int value
			*/
			class uncertaintyFixed extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute uncertaintyVariableFactor
			*
			* The factor to be applied to the variable component of an uncertainty equation so as to provide the best estimate of the variable horizontal or vertical accuracy component for positions, depths, heights, vertical distances and vertical clearances.
			* @property int value
			*/
			class uncertaintyVariableFactor extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute transmissionContent
			*
			* Content of transmission
			* @property int value
			*/
			class transmissionContent extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute underkeelAllowanceFixed
			*
			* A fixed allowance given by an authority, which is added to draught in order to maintain a minimum underkeel clearance.
			* @property int value
			*/
			class underkeelAllowanceFixed extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute underkeelAllowanceVariableBeamBased
			*
			* A percentage value, given by an authority, which is applied to ship's beam in order to calculate underkeel allowance.
			* @property int value
			*/
			class underkeelAllowanceVariableBeamBased extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute underkeelAllowanceVariableDraughtBased
			*
			* A percentage value, given by an authority, which is applied to ship's draught in order to calculate underkeel allowance.
			* @property int value
			*/
			class underkeelAllowanceVariableDraughtBased extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* Enumeration vesselsCharacteristics
			*
			* Characteristics of vessels
			* @property int value
			*/
			class vesselsCharacteristics extends EnumerationType
			{
				/**
				* Enumeration vesselsCharacteristics
				*
				* Characteristics of vessels
				* @param int value
				* 
				* 1=length overall
				* 2=length at waterline
				* 3=breadth
				* 4=draught
				* 5=height
				* 6=displacement tonnage
				* 7=displacement tonnage, light
				* 8=displacement tonnage, loaded
				* 9=deadweight tonnage
				* 10=gross tonnage
				* 11=net tonnage
				* 12=Panama Canal/Universal Measurement System net tonnage
				* 13=Suez Canal net tonnage
				* 14=Suez Canal gross tonnage
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "length overall");
					$this->addValue(2, "length at waterline");
					$this->addValue(3, "breadth");
					$this->addValue(4, "draught");
					$this->addValue(5, "height");
					$this->addValue(6, "displacement tonnage");
					$this->addValue(7, "displacement tonnage, light");
					$this->addValue(8, "displacement tonnage, loaded");
					$this->addValue(9, "deadweight tonnage");
					$this->addValue(10, "gross tonnage");
					$this->addValue(11, "net tonnage");
					$this->addValue(12, "Panama Canal/Universal Measurement System net tonnage");
					$this->addValue(13, "Suez Canal net tonnage");
					$this->addValue(14, "Suez Canal gross tonnage");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration vesselsCharacteristicsUnit
			*
			* the unit used for vessel characteristics attribute
			* @property int value
			*/
			class vesselsCharacteristicsUnit extends EnumerationType
			{
				/**
				* Enumeration vesselsCharacteristicsUnit
				*
				* the unit used for vessel characteristics attribute
				* @param int value
				* 
				* 1=metre
				* 2=foot
				* 3=metric ton
				* 4=ton
				* 5=short ton
				* 6=gross ton
				* 7=net ton
				* 8=Panama Canal/Universal Measurement System net tonnage
				* 9=Suez Canal Net Tonnage
				* 10=none
				* 11=cubic metres
				* 12=Suez Canal Gross Tonnage
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "metre");
					$this->addValue(2, "foot");
					$this->addValue(3, "metric ton");
					$this->addValue(4, "ton");
					$this->addValue(5, "short ton");
					$this->addValue(6, "gross ton");
					$this->addValue(7, "net ton");
					$this->addValue(8, "Panama Canal/Universal Measurement System net tonnage");
					$this->addValue(9, "Suez Canal Net Tonnage");
					$this->addValue(10, "none");
					$this->addValue(11, "cubic metres");
					$this->addValue(12, "Suez Canal Gross Tonnage");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute vesselsCharacteristicsValue
			*
			* The value of a particular characteristic such as a dimension or tonnage of a vessel
			* @property int value
			*/
			class vesselsCharacteristicsValue extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute vesselPerformance
			*
			* A description of the required handling characteristics of a vessel including hull design, main and auxilliary machinery, cargo handling equipment, navigation equipment and manoeuvring behaviour.
			* @property int value
			*/
			class vesselPerformance extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration qualityOfHorizontalMeasurement
			*
			* The degree of reliability attributed to a position
			* @property int value
			*/
			class qualityOfHorizontalMeasurement extends EnumerationType
			{
				/**
				* Enumeration qualityOfHorizontalMeasurement
				*
				* The degree of reliability attributed to a position
				* @param int value
				* 
				* 1=surveyed
				* 2=unsurveyed
				* 3=inadequately surveyed
				* 4=approximate
				* 5=position doubtful
				* 6=unreliable
				* 7=reported (not surveyed)
				* 8=reported (not confirmed)
				* 9=estimated
				* 10=precisely known
				* 11=calculated
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "surveyed");
					$this->addValue(2, "unsurveyed");
					$this->addValue(3, "inadequately surveyed");
					$this->addValue(4, "approximate");
					$this->addValue(5, "position doubtful");
					$this->addValue(6, "unreliable");
					$this->addValue(7, "reported (not surveyed)");
					$this->addValue(8, "reported (not confirmed)");
					$this->addValue(9, "estimated");
					$this->addValue(10, "precisely known");
					$this->addValue(11, "calculated");
					parent::__construct($value);
				}
			}
	     
			/**
			* SimpleAttribute maximumDisplayScale
			*
			* The largest intended viewing scale for the data.
			* @property int value
			*/
			class maximumDisplayScale extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute minimumDisplayScale
			*
			* The smallest intended viewing scale for the data.
			* @property int value
			*/
			class minimumDisplayScale extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_integer($value);
				}
			}
         
			/**
			* SimpleAttribute orientationValue
			*
			* The angular distance measured from true north to the major axis of the object.
			* @property int value
			*/
			class orientationValue extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute pictorialRepresentation
			*
			* Indicates whether a pictorial representation of the object is available.
			* @property int value
			*/
			class pictorialRepresentation extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute sectorBearing
			*
			* A sector is the part of a circle between two straight lines drawn from the centre to the circumference. Sector bearing specifies the limit of the sector. (Adapted from S-57 Edition 3.1, Appendix A – Chapter 2, Page 2.184, November 2000).
			* @property int value
			*/
			class sectorBearing extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_real($value);
				}
			}
         
			/**
			* SimpleAttribute sourceDate
			*
			* The production date of the source, e.g., the date of measurement.
			* @property int value
			*/
			class sourceDate extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* SimpleAttribute dateVariable
			*
			* A day which is not fixed in the Gregorian calendar.
			* @property int value
			*/
			class dateVariable extends SimpleAttributeType
			{
				public function validate($value)
				{
					return is_text($value);
				}
			}
         
			/**
			* Enumeration waterLevelTrend
			*
			* The tendency of water level to change in a particular direction.
			* @property int value
			*/
			class waterLevelTrend extends EnumerationType
			{
				/**
				* Enumeration waterLevelTrend
				*
				* The tendency of water level to change in a particular direction.
				* @param int value
				* 
				* 1=decreasing
				* 2=increasing
				* 3=steady
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "decreasing");
					$this->addValue(2, "increasing");
					$this->addValue(3, "steady");
					parent::__construct($value);
				}
			}
	     
			/**
			* S100_CodeList actionOrActivity
			*
			* The action or activity of a vessel
			* @property int value
			*/
			class actionOrActivity extends CodeListType
			{
				/**
				* S100_CodeList actionOrActivity
				*
				* The action or activity of a vessel
				* @param int value
				* 
				* 1=navigating with a pilot
				* 2=entering port
				* 3=leaving port
				* 4=berthing
				* 5=slipping
				* 6=anchoring
				* 7=weighing anchor
				* 8=transiting
				* 9=overtaking
				* 10=reporting
				* 11=working cargo
				* 12=landing
				* 13=diving
				* 14=fishing
				* 15=discharging overboard
				* 16=passing
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "navigating with a pilot");
					$this->addValue(2, "entering port");
					$this->addValue(3, "leaving port");
					$this->addValue(4, "berthing");
					$this->addValue(5, "slipping");
					$this->addValue(6, "anchoring");
					$this->addValue(7, "weighing anchor");
					$this->addValue(8, "transiting");
					$this->addValue(9, "overtaking");
					$this->addValue(10, "reporting");
					$this->addValue(11, "working cargo");
					$this->addValue(12, "landing");
					$this->addValue(13, "diving");
					$this->addValue(14, "fishing");
					$this->addValue(15, "discharging overboard");
					$this->addValue(16, "passing");
					parent::__construct($value);
				}
			}
	     
			/**
			* S100_CodeList categoryOfRxN
			*
			* The principal subject matter of regulations, restrictions, recommendations or nautical information
			* @property int value
			*/
			class categoryOfRxN extends CodeListType
			{
				/**
				* S100_CodeList categoryOfRxN
				*
				* The principal subject matter of regulations, restrictions, recommendations or nautical information
				* @param int value
				* 
				* 1=navigation
				* 2=communication
				* 3=environmental protection
				* 4=wildlife protection
				* 5=security
				* 6=customs
				* 7=cargo operation
				* 8=refuge
				* 9=health
				* 10=natural resources or exploitation
				* 11=port
				* 12=finance
				* 13=agriculture
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "navigation");
					$this->addValue(2, "communication");
					$this->addValue(3, "environmental protection");
					$this->addValue(4, "wildlife protection");
					$this->addValue(5, "security");
					$this->addValue(6, "customs");
					$this->addValue(7, "cargo operation");
					$this->addValue(8, "refuge");
					$this->addValue(9, "health");
					$this->addValue(10, "natural resources or exploitation");
					$this->addValue(11, "port");
					$this->addValue(12, "finance");
					$this->addValue(13, "agriculture");
					parent::__construct($value);
				}
			}
	     
			/**
			* S100_CodeList categoryOfSchedule
			*
			* Describes the type of schedule, e.g., opening, closure, etc.
			* @property int value
			*/
			class categoryOfSchedule extends CodeListType
			{
				/**
				* S100_CodeList categoryOfSchedule
				*
				* Describes the type of schedule, e.g., opening, closure, etc.
				* @param int value
				* 
				* 1=normal operation
				* 2=closure
				* 3=unmanned operation
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "normal operation");
					$this->addValue(2, "closure");
					$this->addValue(3, "unmanned operation");
					parent::__construct($value);
				}
			}
	     
			/**
			* S100_CodeList categoryOfVessel
			*
			* Classification of vessels by function or use.
			* @property int value
			*/
			class categoryOfVessel extends CodeListType
			{
				/**
				* S100_CodeList categoryOfVessel
				*
				* Classification of vessels by function or use.
				* @param int value
				* 
				* 1=general cargo vessel
				* 2=container carrier
				* 3=tanker
				* 4=bulk carrier
				* 5=passenger vessel
				* 6=roll-on roll-off
				* 7=refrigerated cargo vessel
				* 8=fishing vessel
				* 9=service
				* 10=warship
				* 11=towed or pushed composite unit
				* 12=tug and tow
				* 13=light recreational
				* 14=semi-submersible offshore installation
				* 15=jack-up exploration or project installation
				* 16=livestock carrier
				* 17=sport fishing
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "general cargo vessel");
					$this->addValue(2, "container carrier");
					$this->addValue(3, "tanker");
					$this->addValue(4, "bulk carrier");
					$this->addValue(5, "passenger vessel");
					$this->addValue(6, "roll-on roll-off");
					$this->addValue(7, "refrigerated cargo vessel");
					$this->addValue(8, "fishing vessel");
					$this->addValue(9, "service");
					$this->addValue(10, "warship");
					$this->addValue(11, "towed or pushed composite unit");
					$this->addValue(12, "tug and tow");
					$this->addValue(13, "light recreational");
					$this->addValue(14, "semi-submersible offshore installation");
					$this->addValue(15, "jack-up exploration or project installation");
					$this->addValue(16, "livestock carrier");
					$this->addValue(17, "sport fishing");
					parent::__construct($value);
				}
			}
	     
			/**
			* S100_CodeList onlineFunction
			*
			* Code for function performed by the online resource
			* @property int value
			*/
			class onlineFunction extends CodeListType
			{
				/**
				* S100_CodeList onlineFunction
				*
				* Code for function performed by the online resource
				* @param int value
				* 
				* 1=download
				* 2=information
				* 3=offline access
				* 4=order
				* 5=search
				* 6=complete metadata
				* 7=browse graphic
				* 8=upload
				* 9=email service
				* 10=browsing
				* 11=file access
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "download");
					$this->addValue(2, "information");
					$this->addValue(3, "offline access");
					$this->addValue(4, "order");
					$this->addValue(5, "search");
					$this->addValue(6, "complete metadata");
					$this->addValue(7, "browse graphic");
					$this->addValue(8, "upload");
					$this->addValue(9, "email service");
					$this->addValue(10, "browsing");
					$this->addValue(11, "file access");
					parent::__construct($value);
				}
			}
	     
			/**
			* S100_CodeList telecommunicationService
			*
			* Classification of methods of communication over a distance by electrical, electronic, or electromagnetic means.
			* @property int value
			*/
			class telecommunicationService extends CodeListType
			{
				/**
				* S100_CodeList telecommunicationService
				*
				* Classification of methods of communication over a distance by electrical, electronic, or electromagnetic means.
				* @param int value
				* 
				* 1=voice
				* 2=facsimile
				* 3=SMS
				* 4=data
				* 5=streamedData
				* 6=telex
				* 7=telegraph
				* 8=email
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "voice");
					$this->addValue(2, "facsimile");
					$this->addValue(3, "SMS");
					$this->addValue(4, "data");
					$this->addValue(5, "streamedData");
					$this->addValue(6, "telex");
					$this->addValue(7, "telegraph");
					$this->addValue(8, "email");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration textJustification
			*
			* The anchor point of a text string
			* @property int value
			*/
			class textJustification extends EnumerationType
			{
				/**
				* Enumeration textJustification
				*
				* The anchor point of a text string
				* @param int value
				* 
				* 1=left
				* 2=centred
				* 3=right
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "left");
					$this->addValue(2, "centred");
					$this->addValue(3, "right");
					parent::__construct($value);
				}
			}
	     
			/**
			* Enumeration textType
			*
			* The attribute from which a text string is derived.
			* @property int value
			*/
			class textType extends EnumerationType
			{
				/**
				* Enumeration textType
				*
				* The attribute from which a text string is derived.
				* @param int value
				* 
				* 1=feature name
				*/
				 public function __construct($value = null)
				{
					
					$this->addValue(1, "feature name");
					parent::__construct($value);
				}
			}
	     
	
	//********************************* COMPLEX ATTRIBUTES ***********************************************************
	
		/**
		* ComplexAttribute bearingInformation
		*
		* A bearing is the direction one object is from another object.
		* 
		* @property cardinalDirection[0..1]  cardinalDirection
		* @property distance[0..1]  distance
		* @property sectorBearing[0..2]  sectorBearing
		* @property information[0..*]  information
		* @property orientation[0..1]  orientation
		*/
		class bearingInformation extends ComplexAttributeType
		{
			/**
			* ComplexAttribute bearingInformation
			*
			* A bearing is the direction one object is from another object.
			*
			* @property cardinalDirection[0..1]  cardinalDirection Principal and intermediate compass points.
			* @property distance[0..1]  distance A numeric measure of the spatial separation between two locations.
			* @property sectorBearing[0..2]  sectorBearing A sector is the part of a circle between two straight lines drawn from the centre to the circumference. Sector bearing specifies the limit of the sector. (Adapted from S-57 Edition 3.1, Appendix A – Chapter 2, Page 2.184, November 2000).
			* @property information[0..*]  information Textual information about the feature.  The information may be provided as a string of text or as a file name of a single external text file that contains the text.
			* @property orientation[0..1]  orientation The angular distance measured from true north to the major axis of the feature.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('cardinalDirection', 'cardinalDirection', 0, 1);
				$this->addAttribute('distance', 'distance', 0, 1);
				$this->addAttribute('sectorBearing', 'sectorBearing', 0, 2);
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				$this->addAttribute('orientation', 'orientation', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute contactAddress
		*
		* Direction or superscription of a letter, package, etc., specifying the name of the place to which it is directed, and optionally a contact person or organisation who should receive it.
		* 
		* @property deliveryPoint[0..*]  deliveryPoint
		* @property cityName[0..1]  cityName
		* @property administrativeDivision[0..1]  administrativeDivision
		* @property countryName[0..1]  countryName
		* @property postalCode[0..1]  postalCode
		*/
		class contactAddress extends ComplexAttributeType
		{
			/**
			* ComplexAttribute contactAddress
			*
			* Direction or superscription of a letter, package, etc., specifying the name of the place to which it is directed, and optionally a contact person or organisation who should receive it.
			*
			* @property deliveryPoint[0..*]  deliveryPoint Details of where post can be delivered such as the apartment, name and/or number of a street, building or PO Box.
			* @property cityName[0..1]  cityName The name of a town or city.
			* @property administrativeDivision[0..1]  administrativeDivision Administrative division is a generic term for an administrative region within a country at a level below that of the sovereign state.
			* @property countryName[0..1]  countryName The name of a nation.
			* @property postalCode[0..1]  postalCode Known in various countries as a postcode, or ZIP code, the postal code is a series of letters and/or digits that identifies each postal delivery area.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('deliveryPoint', 'deliveryPoint', 0, MAX_OCCUR);
				$this->addAttribute('cityName', 'cityName', 0, 1);
				$this->addAttribute('administrativeDivision', 'administrativeDivision', 0, 1);
				$this->addAttribute('countryName', 'countryName', 0, 1);
				$this->addAttribute('postalCode', 'postalCode', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute featureName
		*
		* The complex attribute provides the name of an entity, defines the national language of the name, and provides the option to display the name at various system display settings.
		* 
		* @property displayName[0..1]  displayName
		* @property language[0..1]  language
		* @property name[1..1]  name
		*/
		class featureName extends ComplexAttributeType
		{
			/**
			* ComplexAttribute featureName
			*
			* The complex attribute provides the name of an entity, defines the national language of the name, and provides the option to display the name at various system display settings.
			*
			* @property displayName[0..1]  displayName A statement expressing if a feature name is to be displayed in certain system display settings or not
			* @property language[0..1]  language The method of human communication, either spoken or written, consisting of the use of words in a structured and conventional way.
			* @property name[1..1]  name The individual name of a feature.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('displayName', 'displayName', 0, 1);
				$this->addAttribute('language', 'language', 0, 1);
				$this->addAttribute('name', 'name', 1, 1);
				
			}
		}
	
		/**
		* ComplexAttribute fixedDateRange
		*
		* The complex attribute describes single fixed period, as the date range between its sub-attributes.
		* 
		* @property dateEnd[0..1]  dateEnd
		* @property dateStart[0..1]  dateStart
		*/
		class fixedDateRange extends ComplexAttributeType
		{
			/**
			* ComplexAttribute fixedDateRange
			*
			* The complex attribute describes single fixed period, as the date range between its sub-attributes.
			*
			* @property dateEnd[0..1]  dateEnd The latest date on which an object (e.g., a buoy) will be present.
			* @property dateStart[0..1]  dateStart The earliest date on which an object (e.g., a buoy) will be present.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('dateEnd', 'dateEnd', 0, 1);
				$this->addAttribute('dateStart', 'dateStart', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute frequencyPair
		*
		* A pair of frequencies for transmitting and receiving radio signals. The shore station transmits and receives on the frequencies indicated.
		* 
		* @property frequencyShoreStationTransmits[0..*]  frequencyShoreStationTransmits
		* @property frequencyShoreStationReceives[0..*]  frequencyShoreStationReceives
		* @property contactInstructions[0..*]  contactInstructions
		*/
		class frequencyPair extends ComplexAttributeType
		{
			/**
			* ComplexAttribute frequencyPair
			*
			* A pair of frequencies for transmitting and receiving radio signals. The shore station transmits and receives on the frequencies indicated.
			*
			* @property frequencyShoreStationTransmits[0..*]  frequencyShoreStationTransmits The shore station transmitter frequency expressed in kHz to one decimal place.
			* @property frequencyShoreStationReceives[0..*]  frequencyShoreStationReceives The shore station receiver frequency expressed in kHz to one decimal place.
			* @property contactInstructions[0..*]  contactInstructions Instructions provided on how to contact a particular person, organisation or service.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('frequencyShoreStationTransmits', 'frequencyShoreStationTransmits', 0, MAX_OCCUR);
				$this->addAttribute('frequencyShoreStationReceives', 'frequencyShoreStationReceives', 0, MAX_OCCUR);
				$this->addAttribute('contactInstructions', 'contactInstructions', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* ComplexAttribute graphic
		*
		* Pictorial information such as a photograph, sketch, or other graphic, optionally accompanied by descriptive information about the graphic and the location relative to its subject from which it was made.
		* 
		* @property pictorialRepresentation[1..*]  pictorialRepresentation
		* @property pictureCaption[0..1]  pictureCaption
		* @property sourceDate[0..1]  sourceDate
		* @property pictureInformation[0..1]  pictureInformation
		* @property bearingInformation[0..1]  bearingInformation
		*/
		class graphic extends ComplexAttributeType
		{
			/**
			* ComplexAttribute graphic
			*
			* Pictorial information such as a photograph, sketch, or other graphic, optionally accompanied by descriptive information about the graphic and the location relative to its subject from which it was made.
			*
			* @property pictorialRepresentation[1..*]  pictorialRepresentation Indicates whether a pictorial representation of the object is available.
			* @property pictureCaption[0..1]  pictureCaption Short description of the purpose of the image
			* @property sourceDate[0..1]  sourceDate The production date of the source, e.g., the date of measurement.
			* @property pictureInformation[0..1]  pictureInformation A set of information to provide credits to picture creator, copyright owner etc.
			* @property bearingInformation[0..1]  bearingInformation A bearing is the direction one object is from another object.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('pictorialRepresentation', 'pictorialRepresentation', 1, MAX_OCCUR);
				$this->addAttribute('pictureCaption', 'pictureCaption', 0, 1);
				$this->addAttribute('sourceDate', 'sourceDate', 0, 1);
				$this->addAttribute('pictureInformation', 'pictureInformation', 0, 1);
				$this->addAttribute('bearingInformation', 'bearingInformation', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute horizontalPositionUncertainty
		*
		* The best estimate of the accuracy of a position.
		* 
		* @property uncertaintyFixed[1..1]  uncertaintyFixed
		*/
		class horizontalPositionUncertainty extends ComplexAttributeType
		{
			/**
			* ComplexAttribute horizontalPositionUncertainty
			*
			* The best estimate of the accuracy of a position.
			*
			* @property uncertaintyFixed[1..1]  uncertaintyFixed The best estimate of the fixed horizontal or vertical accuracy component for positions, depths, heights, vertical distances and vertical clearances.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('uncertaintyFixed', 'uncertaintyFixed', 1, 1);
				
			}
		}
	
		/**
		* ComplexAttribute information
		*
		* Textual information about the feature.  The information may be provided as a string of text or as a file name of a single external text file that contains the text.
		* 
		* @property fileLocator[0..1]  fileLocator
		* @property fileReference[0..1]  fileReference
		* @property headline[0..1]  headline
		* @property language[0..1]  language
		* @property text[0..1]  text
		*/
		class information extends ComplexAttributeType
		{
			/**
			* ComplexAttribute information
			*
			* Textual information about the feature.  The information may be provided as a string of text or as a file name of a single external text file that contains the text.
			*
			* @property fileLocator[0..1]  fileLocator The string encodes the location of a fragment of text or other information in a support file.
			* @property fileReference[0..1]  fileReference The string encodes the file name of an external text file that contains the text in English
			* @property headline[0..1]  headline Words set at the head of a passage or page to introduce or categorize
			* @property language[0..1]  language The method of human communication, either spoken or written, consisting of the use of words in a structured and conventional way.
			* @property text[0..1]  text A non-formatted digital text string
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('fileLocator', 'fileLocator', 0, 1);
				$this->addAttribute('fileReference', 'fileReference', 0, 1);
				$this->addAttribute('headline', 'headline', 0, 1);
				$this->addAttribute('language', 'language', 0, 1);
				$this->addAttribute('text', 'text', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute noticeTime
		*
		* Span of time, prior to the time the service is needed, for preparations to be made to fulfil the requirement.
		* 
		* @property noticeTimeHours[0..*]  noticeTimeHours
		* @property noticeTimeText[0..1]  noticeTimeText
		* @property operation[0..1]  operation
		*/
		class noticeTime extends ComplexAttributeType
		{
			/**
			* ComplexAttribute noticeTime
			*
			* Span of time, prior to the time the service is needed, for preparations to be made to fulfil the requirement.
			*
			* @property noticeTimeHours[0..*]  noticeTimeHours The time duration prior to the time the service is needed, when notice must be provided to the service provider.
			* @property noticeTimeText[0..1]  noticeTimeText Text string qualifying the notice time specified in NTCHRS. This may explain the time specification in NTCHRS (e.g., “3 working days” for a NTCHRS value of “72” where NTCTIM is supposed to be "3 working days") or consist of other language qualifying the time, e.g., “On departure from last port” or “On passing reporting line XY”).
			* @property operation[0..1]  operation Indicates whether the minimum or maximum value should be used to describe a condition or in application processing
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('noticeTimeHours', 'noticeTimeHours', 0, MAX_OCCUR);
				$this->addAttribute('noticeTimeText', 'noticeTimeText', 0, 1);
				$this->addAttribute('operation', 'operation', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute onlineResource
		*
		* Information about online sources from which a resource or data can be obtained.
		* 
		* @property linkage[1..1]  linkage
		* @property protocol[0..1]  protocol
		* @property applicationProfile[0..1]  applicationProfile
		* @property nameOfResource[0..1]  nameOfResource
		* @property onlineResourceDescription[0..1]  onlineResourceDescription
		* @property onlineFunction[0..1]  onlineFunction
		* @property protocolRequest[0..1]  protocolRequest
		*/
		class onlineResource extends ComplexAttributeType
		{
			/**
			* ComplexAttribute onlineResource
			*
			* Information about online sources from which a resource or data can be obtained.
			*
			* @property linkage[1..1]  linkage location (address) for on-line access using a URL/URI address or similar addressing scheme. (Adapted from ISO 19115:2014.)
			* @property protocol[0..1]  protocol connection protocol to be used. Example: ftp, http get KVP, http POST, etc.
			* @property applicationProfile[0..1]  applicationProfile name of an application profile that can be used with the online resource (ISO 19115)
			* @property nameOfResource[0..1]  nameOfResource Name of the online resource.
			* @property onlineResourceDescription[0..1]  onlineResourceDescription Detailed text description of what the online resource is/does
			* @property onlineFunction[0..1]  onlineFunction Code for function performed by the online resource
			* @property protocolRequest[0..1]  protocolRequest Request used to access the resource. Structure and content depend on the protocol and standard used by the online resource, such as Web Feature Service standard.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('linkage', 'linkage', 1, 1);
				$this->addAttribute('protocol', 'protocol', 0, 1);
				$this->addAttribute('applicationProfile', 'applicationProfile', 0, 1);
				$this->addAttribute('nameOfResource', 'nameOfResource', 0, 1);
				$this->addAttribute('onlineResourceDescription', 'onlineResourceDescription', 0, 1);
				$this->addAttribute('onlineFunction', 'onlineFunction', 0, 1);
				$this->addAttribute('protocolRequest', 'protocolRequest', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute orientation
		*
		* The angular distance measured from true north to the major axis of the feature.
		* 
		* @property orientationUncertainty[0..1]  orientationUncertainty
		* @property orientationValue[1..1]  orientationValue
		*/
		class orientation extends ComplexAttributeType
		{
			/**
			* ComplexAttribute orientation
			*
			* The angular distance measured from true north to the major axis of the feature.
			*
			* @property orientationUncertainty[0..1]  orientationUncertainty The best estimate of the accuracy of a bearing.
			* @property orientationValue[1..1]  orientationValue The angular distance measured from true north to the major axis of the object.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('orientationUncertainty', 'orientationUncertainty', 0, 1);
				$this->addAttribute('orientationValue', 'orientationValue', 1, 1);
				
			}
		}
	
		/**
		* ComplexAttribute scheduleByDayOfWeek
		*
		* The nature and timings of a daily schedule by days of the week.
		* 
		* @property categoryOfSchedule[0..1]  categoryOfSchedule
		* @property timeIntervalsByDayOfWeek[1..*]  timeIntervalsByDayOfWeek
		*/
		class scheduleByDayOfWeek extends ComplexAttributeType
		{
			/**
			* ComplexAttribute scheduleByDayOfWeek
			*
			* The nature and timings of a daily schedule by days of the week.
			*
			* @property categoryOfSchedule[0..1]  categoryOfSchedule Describes the type of schedule, e.g., opening, closure, etc.
			* @property timeIntervalsByDayOfWeek[1..*]  timeIntervalsByDayOfWeek Time intervals by days of the week.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('categoryOfSchedule', 'categoryOfSchedule', 0, 1);
				$this->addAttribute('timeIntervalsByDayOfWeek', 'timeIntervalsByDayOfWeek', 1, MAX_OCCUR);
				
			}
		}
	
		/**
		* ComplexAttribute periodicDateRange
		*
		* The complex attribute describes the active period for a seasonal feature (e.g. a buoy), as the dates between its sub-attributes
		* 
		* @property dateEnd[1..1]  dateEnd
		* @property dateStart[1..1]  dateStart
		*/
		class periodicDateRange extends ComplexAttributeType
		{
			/**
			* ComplexAttribute periodicDateRange
			*
			* The complex attribute describes the active period for a seasonal feature (e.g. a buoy), as the dates between its sub-attributes
			*
			* @property dateEnd[1..1]  dateEnd The latest date on which an object (e.g., a buoy) will be present.
			* @property dateStart[1..1]  dateStart The earliest date on which an object (e.g., a buoy) will be present.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('dateEnd', 'dateEnd', 1, 1);
				$this->addAttribute('dateStart', 'dateStart', 1, 1);
				
			}
		}
	
		/**
		* ComplexAttribute radiocommunications
		*
		* Detailed radiocommunications description with channels, frequencies, preferences and time schedules
		* 
		* @property categoryOfCommPref[0..1]  categoryOfCommPref
		* @property categoryOfMaritimeBroadcast[0..*]  categoryOfMaritimeBroadcast
		* @property categoryOfRadioMethods[0..*]  categoryOfRadioMethods
		* @property communicationChannel[0..*]  communicationChannel
		* @property contactInstructions[0..1]  contactInstructions
		* @property frequencyPair[0..*]  frequencyPair
		* @property signalFrequency[0..*]  signalFrequency
		* @property transmissionContent[0..1]  transmissionContent
		* @property timeIntervalsByDayOfWeek[0..*]  timeIntervalsByDayOfWeek
		*/
		class radiocommunications extends ComplexAttributeType
		{
			/**
			* ComplexAttribute radiocommunications
			*
			* Detailed radiocommunications description with channels, frequencies, preferences and time schedules
			*
			* @property categoryOfCommPref[0..1]  categoryOfCommPref Classification of frequencies, VHF channels, telephone numbers, or other means of communication based on preference.
			* @property categoryOfMaritimeBroadcast[0..*]  categoryOfMaritimeBroadcast Classification of maritime broadcast based on the nature of information conveyed.
			* @property categoryOfRadioMethods[0..*]  categoryOfRadioMethods Categories of radiocommunications based on frequency band and radio traffic method.
			* @property communicationChannel[0..*]  communicationChannel A channel number assigned to a specific radio frequency, frequencies or frequency band.
			* @property contactInstructions[0..1]  contactInstructions Instructions provided on how to contact a particular person, organisation or service.
			* @property frequencyPair[0..*]  frequencyPair A pair of frequencies for transmitting and receiving radio signals. The shore station transmits and receives on the frequencies indicated.
			* @property signalFrequency[0..*]  signalFrequency The frequency of a signal.
			* @property transmissionContent[0..1]  transmissionContent Content of transmission
			* @property timeIntervalsByDayOfWeek[0..*]  timeIntervalsByDayOfWeek Time intervals by days of the week.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('categoryOfCommPref', 'categoryOfCommPref', 0, 1);
				$this->addAttribute('categoryOfMaritimeBroadcast', 'categoryOfMaritimeBroadcast', 0, MAX_OCCUR);
				$this->addAttribute('categoryOfRadioMethods', 'categoryOfRadioMethods', 0, MAX_OCCUR);
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('contactInstructions', 'contactInstructions', 0, 1);
				$this->addAttribute('frequencyPair', 'frequencyPair', 0, MAX_OCCUR);
				$this->addAttribute('signalFrequency', 'signalFrequency', 0, MAX_OCCUR);
				$this->addAttribute('transmissionContent', 'transmissionContent', 0, 1);
				$this->addAttribute('timeIntervalsByDayOfWeek', 'timeIntervalsByDayOfWeek', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* ComplexAttribute rxnCode
		*
		* A summary of the impact of the most common types of regulation, restriction, recommendation and nautical information on a vessel.
		* 
		* @property categoryOfRxN[0..1]  categoryOfRxN
		* @property actionOrActivity[0..1]  actionOrActivity
		* @property headline[0..1]  headline
		*/
		class rxnCode extends ComplexAttributeType
		{
			/**
			* ComplexAttribute rxnCode
			*
			* A summary of the impact of the most common types of regulation, restriction, recommendation and nautical information on a vessel.
			*
			* @property categoryOfRxN[0..1]  categoryOfRxN The principal subject matter of regulations, restrictions, recommendations or nautical information
			* @property actionOrActivity[0..1]  actionOrActivity The action or activity of a vessel
			* @property headline[0..1]  headline Words set at the head of a passage or page to introduce or categorize
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('categoryOfRxN', 'categoryOfRxN', 0, 1);
				$this->addAttribute('actionOrActivity', 'actionOrActivity', 0, 1);
				$this->addAttribute('headline', 'headline', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute sourceIndication
		*
		* Information about the source document, publication, or reference from which object data or textual material included or referenced in a dataset are derived
		* 
		* @property categoryOfAuthority[0..1]  categoryOfAuthority
		* @property countryName[0..1]  countryName
		* @property reportedDate[0..1]  reportedDate
		* @property source[0..1]  source
		* @property sourceType[0..1]  sourceType
		* @property featureName[0..*]  featureName
		*/
		class sourceIndication extends ComplexAttributeType
		{
			/**
			* ComplexAttribute sourceIndication
			*
			* Information about the source document, publication, or reference from which object data or textual material included or referenced in a dataset are derived
			*
			* @property categoryOfAuthority[0..1]  categoryOfAuthority The type of person, government agency or organisation granted powers of managing or controlling access to and/or activity in an area
			* @property countryName[0..1]  countryName The name of a nation.
			* @property reportedDate[0..1]  reportedDate The date that the item was observed, done, or investigated
			* @property source[0..1]  source An identifier (publication, document, reference work, instrument, vessel, etc) from which information comes or is acquired.
			* @property sourceType[0..1]  sourceType type of the source
			* @property featureName[0..*]  featureName The complex attribute provides the name of an entity, defines the national language of the name, and provides the option to display the name at various system display settings.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('categoryOfAuthority', 'categoryOfAuthority', 0, 1);
				$this->addAttribute('countryName', 'countryName', 0, 1);
				$this->addAttribute('reportedDate', 'reportedDate', 0, 1);
				$this->addAttribute('source', 'source', 0, 1);
				$this->addAttribute('sourceType', 'sourceType', 0, 1);
				$this->addAttribute('featureName', 'featureName', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* ComplexAttribute surveyDateRange
		*
		* The complex attribute describes the period of the hydrographic survey, as the time between its sub-attributes.
		* 
		* @property dateEnd[1..1]  dateEnd
		* @property dateStart[0..1]  dateStart
		*/
		class surveyDateRange extends ComplexAttributeType
		{
			/**
			* ComplexAttribute surveyDateRange
			*
			* The complex attribute describes the period of the hydrographic survey, as the time between its sub-attributes.
			*
			* @property dateEnd[1..1]  dateEnd The latest date on which an object (e.g., a buoy) will be present.
			* @property dateStart[0..1]  dateStart The earliest date on which an object (e.g., a buoy) will be present.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('dateEnd', 'dateEnd', 1, 1);
				$this->addAttribute('dateStart', 'dateStart', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute telecommunications
		*
		* A means or channel of communicating at a distance by electrical or electromagnetic means such as telegraphy, telephony, or broadcasting.
		* 
		* @property categoryOfCommPref[0..1]  categoryOfCommPref
		* @property telecommunicationIdentifier[1..1]  telecommunicationIdentifier
		* @property telcomCarrier[0..1]  telcomCarrier
		* @property contactInstructions[0..1]  contactInstructions
		* @property telecommunicationService[0..*]  telecommunicationService
		* @property scheduleByDayOfWeek[0..1]  scheduleByDayOfWeek
		*/
		class telecommunications extends ComplexAttributeType
		{
			/**
			* ComplexAttribute telecommunications
			*
			* A means or channel of communicating at a distance by electrical or electromagnetic means such as telegraphy, telephony, or broadcasting.
			*
			* @property categoryOfCommPref[0..1]  categoryOfCommPref Classification of frequencies, VHF channels, telephone numbers, or other means of communication based on preference.
			* @property telecommunicationIdentifier[1..1]  telecommunicationIdentifier An identifier, such as words, numbers, letters, symbols, or any combination of those used to establish a contact to a particular person, organisation or service.
			* @property telcomCarrier[0..1]  telcomCarrier The name of a provider or type of carrier for a telecommunication service. This service may include land line based, shore based or satellite based radio connections.
			* @property contactInstructions[0..1]  contactInstructions Instructions provided on how to contact a particular person, organisation or service.
			* @property telecommunicationService[0..*]  telecommunicationService Classification of methods of communication over a distance by electrical, electronic, or electromagnetic means.
			* @property scheduleByDayOfWeek[0..1]  scheduleByDayOfWeek The nature and timings of a daily schedule by days of the week.
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('categoryOfCommPref', 'categoryOfCommPref', 0, 1);
				$this->addAttribute('telecommunicationIdentifier', 'telecommunicationIdentifier', 1, 1);
				$this->addAttribute('telcomCarrier', 'telcomCarrier', 0, 1);
				$this->addAttribute('contactInstructions', 'contactInstructions', 0, 1);
				$this->addAttribute('telecommunicationService', 'telecommunicationService', 0, MAX_OCCUR);
				$this->addAttribute('scheduleByDayOfWeek', 'scheduleByDayOfWeek', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute textContent
		*
		* Textual material, or a pointer to a resource providing textual material. May be accompanied by basic information about its source and relationship to the source.
		* 
		* @property categoryOfText[0..1]  categoryOfText
		* @property information[0..*]  information
		* @property onlineResource[0..1]  onlineResource
		* @property sourceIndication[0..1]  sourceIndication
		*/
		class textContent extends ComplexAttributeType
		{
			/**
			* ComplexAttribute textContent
			*
			* Textual material, or a pointer to a resource providing textual material. May be accompanied by basic information about its source and relationship to the source.
			*
			* @property categoryOfText[0..1]  categoryOfText Classification of completeness of textual information in relation to the source.
			* @property information[0..*]  information Textual information about the feature.  The information may be provided as a string of text or as a file name of a single external text file that contains the text.
			* @property onlineResource[0..1]  onlineResource Information about online sources from which a resource or data can be obtained.
			* @property sourceIndication[0..1]  sourceIndication Information about the source document, publication, or reference from which object data or textual material included or referenced in a dataset are derived
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('categoryOfText', 'categoryOfText', 0, 1);
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				$this->addAttribute('onlineResource', 'onlineResource', 0, 1);
				$this->addAttribute('sourceIndication', 'sourceIndication', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute timeIntervalsByDayOfWeek
		*
		* Time intervals by days of the week.
		* 
		* @property dayOfWeek[0..7]  dayOfWeek
		* @property dayOfWeekIsRange[0..1]  dayOfWeekIsRange
		* @property timeOfDayStart[0..*]  timeOfDayStart
		* @property timeOfDayEnd[0..*]  timeOfDayEnd
		*/
		class timeIntervalsByDayOfWeek extends ComplexAttributeType
		{
			/**
			* ComplexAttribute timeIntervalsByDayOfWeek
			*
			* Time intervals by days of the week.
			*
			* @property dayOfWeek[0..7]  dayOfWeek Days of the week.
			* @property dayOfWeekIsRange[0..1]  dayOfWeekIsRange A statement expressing if the days of the week identified define a range or not.
			* @property timeOfDayStart[0..*]  timeOfDayStart Starting time of day, possibly for a period within the day
			* @property timeOfDayEnd[0..*]  timeOfDayEnd Ending time of day, possibly for a period within the day
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('dayOfWeek', 'dayOfWeek', 0, 7);
				$this->addAttribute('dayOfWeekIsRange', 'dayOfWeekIsRange', 0, 1);
				$this->addAttribute('timeOfDayStart', 'timeOfDayStart', 0, MAX_OCCUR);
				$this->addAttribute('timeOfDayEnd', 'timeOfDayEnd', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* ComplexAttribute underkeelAllowance
		*
		* A fixed figure, or a figure derived by calculation, which is added to draught in order to maintain the minimum underkeel clearance taking into account the vessel's static and dynamic characteristics, sea state, information from real time sensors and weather forecast, the reliability of the chart and variance from predicted height of tide or water level.
		* 
		* @property underkeelAllowanceFixed[0..1]  underkeelAllowanceFixed
		* @property underkeelAllowanceVariableBeamBased[0..1]  underkeelAllowanceVariableBeamBased
		* @property underkeelAllowanceVariableDraughtBased[0..1]  underkeelAllowanceVariableDraughtBased
		* @property operation[0..1]  operation
		*/
		class underkeelAllowance extends ComplexAttributeType
		{
			/**
			* ComplexAttribute underkeelAllowance
			*
			* A fixed figure, or a figure derived by calculation, which is added to draught in order to maintain the minimum underkeel clearance taking into account the vessel's static and dynamic characteristics, sea state, information from real time sensors and weather forecast, the reliability of the chart and variance from predicted height of tide or water level.
			*
			* @property underkeelAllowanceFixed[0..1]  underkeelAllowanceFixed A fixed allowance given by an authority, which is added to draught in order to maintain a minimum underkeel clearance.
			* @property underkeelAllowanceVariableBeamBased[0..1]  underkeelAllowanceVariableBeamBased A percentage value, given by an authority, which is applied to ship's beam in order to calculate underkeel allowance.
			* @property underkeelAllowanceVariableDraughtBased[0..1]  underkeelAllowanceVariableDraughtBased A percentage value, given by an authority, which is applied to ship's draught in order to calculate underkeel allowance.
			* @property operation[0..1]  operation Indicates whether the minimum or maximum value should be used to describe a condition or in application processing
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('underkeelAllowanceFixed', 'underkeelAllowanceFixed', 0, 1);
				$this->addAttribute('underkeelAllowanceVariableBeamBased', 'underkeelAllowanceVariableBeamBased', 0, 1);
				$this->addAttribute('underkeelAllowanceVariableDraughtBased', 'underkeelAllowanceVariableDraughtBased', 0, 1);
				$this->addAttribute('operation', 'operation', 0, 1);
				
			}
		}
	
		/**
		* ComplexAttribute vesselsMeasurements
		*
		* Terms and definitions specifically related to vessels
		* 
		* @property comparisonOperator[1..1]  comparisonOperator
		* @property vesselsCharacteristics[1..1]  vesselsCharacteristics
		* @property vesselsCharacteristicsValue[1..1]  vesselsCharacteristicsValue
		* @property vesselsCharacteristicsUnit[1..1]  vesselsCharacteristicsUnit
		*/
		class vesselsMeasurements extends ComplexAttributeType
		{
			/**
			* ComplexAttribute vesselsMeasurements
			*
			* Terms and definitions specifically related to vessels
			*
			* @property comparisonOperator[1..1]  comparisonOperator Numerical comparison
			* @property vesselsCharacteristics[1..1]  vesselsCharacteristics Characteristics of vessels
			* @property vesselsCharacteristicsValue[1..1]  vesselsCharacteristicsValue The value of a particular characteristic such as a dimension or tonnage of a vessel
			* @property vesselsCharacteristicsUnit[1..1]  vesselsCharacteristicsUnit the unit used for vessel characteristics attribute
			*/
			public function __construct()
			{
				parent::__construct();
				
				$this->addAttribute('comparisonOperator', 'comparisonOperator', 1, 1);
				$this->addAttribute('vesselsCharacteristics', 'vesselsCharacteristics', 1, 1);
				$this->addAttribute('vesselsCharacteristicsValue', 'vesselsCharacteristicsValue', 1, 1);
				$this->addAttribute('vesselsCharacteristicsUnit', 'vesselsCharacteristicsUnit', 1, 1);
				
			}
		}
	

	
	//********************************* FEATURE TYPES ***********************************************************
	
		/**
		* FeatureType FeatureType
		*
		* Generalized feature type which carries all the common attributes
		* 
		* 
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		abstract class FeatureType extends AbstractFeatureType
		{
		
			/**
			* FeatureType FeatureType
			*
			* Generalized feature type which carries all the common attributes
			* 
			* 
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('fixedDateRange', 'fixedDateRange', 0, 1);
				$this->addAttribute('periodicDateRange', 'periodicDateRange', 0, MAX_OCCUR);
				$this->addAttribute('featureName', 'featureName', 0, MAX_OCCUR);
				$this->addAttribute('sourceIndication', 'sourceIndication', 0, 1);
				$this->addAttribute('textContent', 'textContent', 0, 1);
				
				//FeatureBindings
				$this->addAttribute('TextAssociation_positions', 'TextPlacement', 0, 1 );
				
				//InformationBindings
				$this->addAttribute('PermissionType_permission', 'Applicability', 0, MAX_OCCUR);
				$this->addAttribute('AssociatedRxN_theRxN', 'AbstractRxN', 0, MAX_OCCUR);
				$this->addAttribute('AdditionalInformation_providesInformation', 'NauticalInformation', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* FeatureType OrganisationContactArea
		*
		* A feature often associated with contact information for an organization that exercises a management role or offers a service in the location.
		* 
		* 
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		abstract class OrganisationContactArea extends FeatureType
		{
		
			/**
			* FeatureType OrganisationContactArea
			*
			* A feature often associated with contact information for an organization that exercises a management role or offers a service in the location.
			* 
			* 
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('SrvContact_theContactDetails', 'ContactDetails', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* FeatureType SupervisedArea
		*
		* A location which may be supervised by a responsible or controlling authority.
		* 
		* 
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		abstract class SupervisedArea extends OrganisationContactArea
		{
		
			/**
			* FeatureType SupervisedArea
			*
			* A location which may be supervised by a responsible or controlling authority.
			* 
			* 
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('SrvControl_controlAuthority', 'Authority', 0, 1);
				
			}
		}
	
		/**
		* FeatureType ReportableServiceArea
		*
		* A service area that generally has requirements for submission of information, including communications not strictly considered "reporting."
		* 
		* 
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		abstract class ReportableServiceArea extends SupervisedArea
		{
		
			/**
			* FeatureType ReportableServiceArea
			*
			* A service area that generally has requirements for submission of information, including communications not strictly considered "reporting."
			* 
			* 
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('TrafficServRept_reptForTrafficServ', 'ShipReport', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* FeatureType CautionArea
		*
		* Generally, an area where the mariner has to be made aware of circumstances influencing the safety of navigation.
		* 
		* 
		* @property condition[0..1] condition |Defined in CautionArea
		* @property status[0..1] status |Defined in CautionArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class CautionArea extends FeatureType
		{
		
			/**
			* FeatureType CautionArea
			*
			* Generally, an area where the mariner has to be made aware of circumstances influencing the safety of navigation.
			* 
			* 
		* @property condition[0..1] condition |Defined in CautionArea
		* @property status[0..1] status |Defined in CautionArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('condition', 'condition', 0, 1);
				$this->addAttribute('status', 'status', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType ConcentrationOfShippingHazardArea
		*
		* An area where hazards, caused by concentrations of shipping, may occur. Hazards are risks to shipping, which stem from sources other than shoal water or obstructions.
		* 
		* 
		* @property categoryOfConcentrationOfShippingHazardArea[0..*] categoryOfConcentrationOfShippingHazardArea |Defined in ConcentrationOfShippingHazardArea
		* @property status[0..*] status |Defined in ConcentrationOfShippingHazardArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class ConcentrationOfShippingHazardArea extends FeatureType
		{
		
			/**
			* FeatureType ConcentrationOfShippingHazardArea
			*
			* An area where hazards, caused by concentrations of shipping, may occur. Hazards are risks to shipping, which stem from sources other than shoal water or obstructions.
			* 
			* 
		* @property categoryOfConcentrationOfShippingHazardArea[0..*] categoryOfConcentrationOfShippingHazardArea |Defined in ConcentrationOfShippingHazardArea
		* @property status[0..*] status |Defined in ConcentrationOfShippingHazardArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfConcentrationOfShippingHazardArea', 'categoryOfConcentrationOfShippingHazardArea', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType IspsCodeSecurityLevel
		*
		* The area to which an International Ship and Port Facility Security (ISPS) level applies.
		* 
		* 
		* @property ispsLevel[1..1] ispsLevel |Defined in IspsCodeSecurityLevel
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class IspsCodeSecurityLevel extends OrganisationContactArea
		{
		
			/**
			* FeatureType IspsCodeSecurityLevel
			*
			* The area to which an International Ship and Port Facility Security (ISPS) level applies.
			* 
			* 
		* @property ispsLevel[1..1] ispsLevel |Defined in IspsCodeSecurityLevel
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('ispsLevel', 'ispsLevel', 1, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType LocalPortServiceArea
		*
		* A service established to provide port information without interaction between the customer and the service provider. This information could be inter alia berthing information, availability of port services, shipping schedules, meteorological and hydrological data.
		* 
		* 
		* @property serviceAccessProcedure[0..1] serviceAccessProcedure |Defined in LocalPortServiceArea
		* @property requirementsForMaintenanceOfListeningWatch[1..1] requirementsForMaintenanceOfListeningWatch |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadioCallingInPoint |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadarRange |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationWarning |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationTraffic |Defined in LocalPortServiceArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class LocalPortServiceArea extends ReportableServiceArea
		{
		
			/**
			* FeatureType LocalPortServiceArea
			*
			* A service established to provide port information without interaction between the customer and the service provider. This information could be inter alia berthing information, availability of port services, shipping schedules, meteorological and hydrological data.
			* 
			* 
		* @property serviceAccessProcedure[0..1] serviceAccessProcedure |Defined in LocalPortServiceArea
		* @property requirementsForMaintenanceOfListeningWatch[1..1] requirementsForMaintenanceOfListeningWatch |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadioCallingInPoint |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadarRange |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationWarning |Defined in LocalPortServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationTraffic |Defined in LocalPortServiceArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('serviceAccessProcedure', 'serviceAccessProcedure', 0, 1);
				$this->addAttribute('requirementsForMaintenanceOfListeningWatch', 'requirementsForMaintenanceOfListeningWatch', 1, 1);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'RadioCallingInPoint', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'RadarRange', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'SignalStationWarning', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'SignalStationTraffic', 0, MAX_OCCUR );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType MilitaryPracticeArea
		*
		* An area within which naval, military or aerial exercises are carried out. Also called an 'exercise area'.
		* 
		* 
		* @property categoryOfMilitaryPracticeArea[0..*] categoryOfMilitaryPracticeArea |Defined in MilitaryPracticeArea
		* @property nationality[0..1] nationality |Defined in MilitaryPracticeArea
		* @property restriction[0..*] restriction |Defined in MilitaryPracticeArea
		* @property status[0..*] status |Defined in MilitaryPracticeArea
		* @property LocationHours_theServiceHours[0..1] ServiceHours |Defined in MilitaryPracticeArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class MilitaryPracticeArea extends SupervisedArea
		{
		
			/**
			* FeatureType MilitaryPracticeArea
			*
			* An area within which naval, military or aerial exercises are carried out. Also called an 'exercise area'.
			* 
			* 
		* @property categoryOfMilitaryPracticeArea[0..*] categoryOfMilitaryPracticeArea |Defined in MilitaryPracticeArea
		* @property nationality[0..1] nationality |Defined in MilitaryPracticeArea
		* @property restriction[0..*] restriction |Defined in MilitaryPracticeArea
		* @property status[0..*] status |Defined in MilitaryPracticeArea
		* @property LocationHours_theServiceHours[0..1] ServiceHours |Defined in MilitaryPracticeArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfMilitaryPracticeArea', 'categoryOfMilitaryPracticeArea', 0, MAX_OCCUR);
				$this->addAttribute('nationality', 'nationality', 0, 1);
				$this->addAttribute('restriction', 'restriction', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('LocationHours_theServiceHours', 'ServiceHours', 0, 1);
				
			}
		}
	
		/**
		* FeatureType PilotBoardingPlace
		*
		* The meeting place to which the pilot comes out.
		* 
		* 
		* @property callSign[0..1] callSign |Defined in PilotBoardingPlace
		* @property categoryOfPilotBoardingPlace[0..1] categoryOfPilotBoardingPlace |Defined in PilotBoardingPlace
		* @property categoryOfPreference[0..1] categoryOfPreference |Defined in PilotBoardingPlace
		* @property categoryOfVessel[0..1] categoryOfVessel |Defined in PilotBoardingPlace
		* @property communicationChannel[0..*] communicationChannel |Defined in PilotBoardingPlace
		* @property destination[0..1] destination |Defined in PilotBoardingPlace
		* @property pilotMovement[0..1] pilotMovement |Defined in PilotBoardingPlace
		* @property pilotVessel[0..1] pilotVessel |Defined in PilotBoardingPlace
		* @property status[0..*] status |Defined in PilotBoardingPlace
		* @property PilotageDistrictAssociation_componentOf[0..1] PilotageDistrict |Defined in PilotBoardingPlace
		* @property ServiceProvisionArea_serviceProvider[0..*] PilotService |Defined in PilotBoardingPlace
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class PilotBoardingPlace extends OrganisationContactArea
		{
		
			/**
			* FeatureType PilotBoardingPlace
			*
			* The meeting place to which the pilot comes out.
			* 
			* 
		* @property callSign[0..1] callSign |Defined in PilotBoardingPlace
		* @property categoryOfPilotBoardingPlace[0..1] categoryOfPilotBoardingPlace |Defined in PilotBoardingPlace
		* @property categoryOfPreference[0..1] categoryOfPreference |Defined in PilotBoardingPlace
		* @property categoryOfVessel[0..1] categoryOfVessel |Defined in PilotBoardingPlace
		* @property communicationChannel[0..*] communicationChannel |Defined in PilotBoardingPlace
		* @property destination[0..1] destination |Defined in PilotBoardingPlace
		* @property pilotMovement[0..1] pilotMovement |Defined in PilotBoardingPlace
		* @property pilotVessel[0..1] pilotVessel |Defined in PilotBoardingPlace
		* @property status[0..*] status |Defined in PilotBoardingPlace
		* @property PilotageDistrictAssociation_componentOf[0..1] PilotageDistrict |Defined in PilotBoardingPlace
		* @property ServiceProvisionArea_serviceProvider[0..*] PilotService |Defined in PilotBoardingPlace
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('callSign', 'callSign', 0, 1);
				$this->addAttribute('categoryOfPilotBoardingPlace', 'categoryOfPilotBoardingPlace', 0, 1);
				$this->addAttribute('categoryOfPreference', 'categoryOfPreference', 0, 1);
				$this->addAttribute('categoryOfVessel', 'categoryOfVessel', 0, 1);
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('destination', 'destination', 0, 1);
				$this->addAttribute('pilotMovement', 'pilotMovement', 0, 1);
				$this->addAttribute('pilotVessel', 'pilotVessel', 0, 1);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				$this->addAttribute('PilotageDistrictAssociation_componentOf', 'PilotageDistrict', 0, 1 );
				$this->addAttribute('ServiceProvisionArea_serviceProvider', 'PilotService', 0, MAX_OCCUR );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType PilotService
		*
		* The service provided by a person who directs the movements of a vessel through pilot waters, usually a person who has demonstrated extensive knowledge of channels, aids to navigation, dangers to navigation, etc., in a particular area and is licensed for that area.
		* 
		* 
		* @property categoryOfPilot[0..*] categoryOfPilot |Defined in PilotService
		* @property pilotQualification[0..1] pilotQualification |Defined in PilotService
		* @property pilotRequest[0..1] pilotRequest |Defined in PilotService
		* @property remotePilot[1..1] remotePilot |Defined in PilotService
		* @property noticeTime[0..1] noticeTime |Defined in PilotService
		* @property ServiceProvisionArea_serviceArea[0..1] PilotageDistrict |Defined in PilotService
		* @property ServiceProvisionArea_serviceArea[0..*] PilotBoardingPlace |Defined in PilotService
		* @property LocationHours_theServiceHours[0..1] ServiceHours |Defined in PilotService
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class PilotService extends ReportableServiceArea
		{
		
			/**
			* FeatureType PilotService
			*
			* The service provided by a person who directs the movements of a vessel through pilot waters, usually a person who has demonstrated extensive knowledge of channels, aids to navigation, dangers to navigation, etc., in a particular area and is licensed for that area.
			* 
			* 
		* @property categoryOfPilot[0..*] categoryOfPilot |Defined in PilotService
		* @property pilotQualification[0..1] pilotQualification |Defined in PilotService
		* @property pilotRequest[0..1] pilotRequest |Defined in PilotService
		* @property remotePilot[1..1] remotePilot |Defined in PilotService
		* @property noticeTime[0..1] noticeTime |Defined in PilotService
		* @property ServiceProvisionArea_serviceArea[0..1] PilotageDistrict |Defined in PilotService
		* @property ServiceProvisionArea_serviceArea[0..*] PilotBoardingPlace |Defined in PilotService
		* @property LocationHours_theServiceHours[0..1] ServiceHours |Defined in PilotService
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfPilot', 'categoryOfPilot', 0, MAX_OCCUR);
				$this->addAttribute('pilotQualification', 'pilotQualification', 0, 1);
				$this->addAttribute('pilotRequest', 'pilotRequest', 0, 1);
				$this->addAttribute('remotePilot', 'remotePilot', 1, 1);
				$this->addAttribute('noticeTime', 'noticeTime', 0, 1);
				
				//FeatureBindings
				$this->addAttribute('ServiceProvisionArea_serviceArea', 'PilotageDistrict', 0, 1 );
				$this->addAttribute('ServiceProvisionArea_serviceArea', 'PilotBoardingPlace', 0, MAX_OCCUR );
				
				//InformationBindings
				$this->addAttribute('LocationHours_theServiceHours', 'ServiceHours', 0, 1);
				
			}
		}
	
		/**
		* FeatureType PilotageDistrict
		*
		* An area within which a pilotage direction exists. Such directions are regulated by a competent harbour authority which dictates circumstances under which they apply.
		* 
		* 
		* @property communicationChannel[0..*] communicationChannel |Defined in PilotageDistrict
		* @property PilotageDistrictAssociation_consistsOf[0..*] PilotBoardingPlace |Defined in PilotageDistrict
		* @property ServiceProvisionArea_serviceProvider[0..*] PilotService |Defined in PilotageDistrict
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class PilotageDistrict extends FeatureType
		{
		
			/**
			* FeatureType PilotageDistrict
			*
			* An area within which a pilotage direction exists. Such directions are regulated by a competent harbour authority which dictates circumstances under which they apply.
			* 
			* 
		* @property communicationChannel[0..*] communicationChannel |Defined in PilotageDistrict
		* @property PilotageDistrictAssociation_consistsOf[0..*] PilotBoardingPlace |Defined in PilotageDistrict
		* @property ServiceProvisionArea_serviceProvider[0..*] PilotService |Defined in PilotageDistrict
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				
				//FeatureBindings
				$this->addAttribute('PilotageDistrictAssociation_consistsOf', 'PilotBoardingPlace', 0, MAX_OCCUR );
				$this->addAttribute('ServiceProvisionArea_serviceProvider', 'PilotService', 0, MAX_OCCUR );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType PiracyRiskArea
		*
		* An area where there is a raised risk of piracy or armed robbery.
		* 
		* 
		* @property restriction[1..*] restriction |Defined in PiracyRiskArea
		* @property status[0..*] status |Defined in PiracyRiskArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class PiracyRiskArea extends ReportableServiceArea
		{
		
			/**
			* FeatureType PiracyRiskArea
			*
			* An area where there is a raised risk of piracy or armed robbery.
			* 
			* 
		* @property restriction[1..*] restriction |Defined in PiracyRiskArea
		* @property status[0..*] status |Defined in PiracyRiskArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('restriction', 'restriction', 1, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType PlaceOfRefuge
		*
		* A place where a ship in need of assistance can take action to enable it to stabilize its condition and reduce the hazards to navigation, and to protect human life and the environment.
		* 
		* 
		* @property communicationChannel[0..*] communicationChannel |Defined in PlaceOfRefuge
		* @property status[0..*] status |Defined in PlaceOfRefuge
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class PlaceOfRefuge extends ReportableServiceArea
		{
		
			/**
			* FeatureType PlaceOfRefuge
			*
			* A place where a ship in need of assistance can take action to enable it to stabilize its condition and reduce the hazards to navigation, and to protect human life and the environment.
			* 
			* 
		* @property communicationChannel[0..*] communicationChannel |Defined in PlaceOfRefuge
		* @property status[0..*] status |Defined in PlaceOfRefuge
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType RadarRange
		*
		* Indicates the coverage of a sea area by a radar surveillance station. Inside this area a vessel may request shore-based radar assistance, particularly in poor visibility.
		* 
		* 
		* @property communicationChannel[0..*] communicationChannel |Defined in RadarRange
		* @property status[0..*] status |Defined in RadarRange
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in RadarRange
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in RadarRange
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in RadarRange
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class RadarRange extends FeatureType
		{
		
			/**
			* FeatureType RadarRange
			*
			* Indicates the coverage of a sea area by a radar surveillance station. Inside this area a vessel may request shore-based radar assistance, particularly in poor visibility.
			* 
			* 
		* @property communicationChannel[0..*] communicationChannel |Defined in RadarRange
		* @property status[0..*] status |Defined in RadarRange
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in RadarRange
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in RadarRange
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in RadarRange
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'VesselTrafficServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'LocalPortServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'ShipReportingServiceArea', 0, 1 );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType RadioCallingInPoint
		*
		* On passing a radio callin-in point or crossing a defined line vessels are required to report on VHF to a Traffic Control Centre. The attribute 'orientation' (ORIENT) encodes the orientation of the traffic flow at that point.
		* 
		* 
		* @property callSign[0..1] callSign |Defined in RadioCallingInPoint
		* @property communicationChannel[0..*] communicationChannel |Defined in RadioCallingInPoint
		* @property categoryOfCargo[0..*] categoryOfCargo |Defined in RadioCallingInPoint
		* @property categoryOfVessel[0..*] categoryOfVessel |Defined in RadioCallingInPoint
		* @property orientationValue[0..2] orientationValue |Defined in RadioCallingInPoint
		* @property status[0..*] status |Defined in RadioCallingInPoint
		* @property trafficFlow[1..1] trafficFlow |Defined in RadioCallingInPoint
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in RadioCallingInPoint
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in RadioCallingInPoint
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in RadioCallingInPoint
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class RadioCallingInPoint extends FeatureType
		{
		
			/**
			* FeatureType RadioCallingInPoint
			*
			* On passing a radio callin-in point or crossing a defined line vessels are required to report on VHF to a Traffic Control Centre. The attribute 'orientation' (ORIENT) encodes the orientation of the traffic flow at that point.
			* 
			* 
		* @property callSign[0..1] callSign |Defined in RadioCallingInPoint
		* @property communicationChannel[0..*] communicationChannel |Defined in RadioCallingInPoint
		* @property categoryOfCargo[0..*] categoryOfCargo |Defined in RadioCallingInPoint
		* @property categoryOfVessel[0..*] categoryOfVessel |Defined in RadioCallingInPoint
		* @property orientationValue[0..2] orientationValue |Defined in RadioCallingInPoint
		* @property status[0..*] status |Defined in RadioCallingInPoint
		* @property trafficFlow[1..1] trafficFlow |Defined in RadioCallingInPoint
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in RadioCallingInPoint
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in RadioCallingInPoint
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in RadioCallingInPoint
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('callSign', 'callSign', 0, 1);
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('categoryOfCargo', 'categoryOfCargo', 0, MAX_OCCUR);
				$this->addAttribute('categoryOfVessel', 'categoryOfVessel', 0, MAX_OCCUR);
				$this->addAttribute('orientationValue', 'orientationValue', 0, 2);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				$this->addAttribute('trafficFlow', 'trafficFlow', 1, 1);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'VesselTrafficServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'LocalPortServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'ShipReportingServiceArea', 0, 1 );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType RestrictedAreaNavigational
		*
		* A specified area of land or water designated by an appropriate authority within which access or navigation is restricted in accordance with certain specified conditions.
				A navigational restricted area is an area where the restrictions have a direct impact on the navigation of a vessel in the area.
		* 
		* 
		* @property categoryOfRestrictedArea[0..*] categoryOfRestrictedArea |Defined in RestrictedAreaNavigational
		* @property restriction[1..*] restriction |Defined in RestrictedAreaNavigational
		* @property status[0..*] status |Defined in RestrictedAreaNavigational
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class RestrictedAreaNavigational extends SupervisedArea
		{
		
			/**
			* FeatureType RestrictedAreaNavigational
			*
			* A specified area of land or water designated by an appropriate authority within which access or navigation is restricted in accordance with certain specified conditions.
				A navigational restricted area is an area where the restrictions have a direct impact on the navigation of a vessel in the area.
			* 
			* 
		* @property categoryOfRestrictedArea[0..*] categoryOfRestrictedArea |Defined in RestrictedAreaNavigational
		* @property restriction[1..*] restriction |Defined in RestrictedAreaNavigational
		* @property status[0..*] status |Defined in RestrictedAreaNavigational
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfRestrictedArea', 'categoryOfRestrictedArea', 0, MAX_OCCUR);
				$this->addAttribute('restriction', 'restriction', 1, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType RestrictedAreaRegulatory
		*
		* A specified area of land or water designated by an appropriate authority within which access or navigation is restricted in accordance with certain specified conditions. A regulatory restricted area is an area where the restrictions have no direct impact on the navigation of a vessel in the area, but impact on the activities that can take place within the area.
		* 
		* 
		* @property categoryOfRestrictedArea[0..*] categoryOfRestrictedArea |Defined in RestrictedAreaRegulatory
		* @property restriction[0..*] restriction |Defined in RestrictedAreaRegulatory
		* @property status[0..*] status |Defined in RestrictedAreaRegulatory
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class RestrictedAreaRegulatory extends SupervisedArea
		{
		
			/**
			* FeatureType RestrictedAreaRegulatory
			*
			* A specified area of land or water designated by an appropriate authority within which access or navigation is restricted in accordance with certain specified conditions. A regulatory restricted area is an area where the restrictions have no direct impact on the navigation of a vessel in the area, but impact on the activities that can take place within the area.
			* 
			* 
		* @property categoryOfRestrictedArea[0..*] categoryOfRestrictedArea |Defined in RestrictedAreaRegulatory
		* @property restriction[0..*] restriction |Defined in RestrictedAreaRegulatory
		* @property status[0..*] status |Defined in RestrictedAreaRegulatory
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfRestrictedArea', 'categoryOfRestrictedArea', 0, MAX_OCCUR);
				$this->addAttribute('restriction', 'restriction', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType RouteingMeasure
		*
		* An area or line designating the limits or central line of a routeing measure (or part of a routeing measure). Routeing measures include traffic separation schemes, deep-water routes, two-way routes, archipelagic sea lanes, and fairway systems.
		* 
		* 
		* @property categoryOfRouteingMeasure[1..1] categoryOfRouteingMeasure |Defined in RouteingMeasure
		* @property categoryOfTrafficSeparationScheme[0..1] categoryOfTrafficSeparationScheme |Defined in RouteingMeasure
		* @property categoryOfNavigationLine[0..1] categoryOfNavigationLine |Defined in RouteingMeasure
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class RouteingMeasure extends FeatureType
		{
		
			/**
			* FeatureType RouteingMeasure
			*
			* An area or line designating the limits or central line of a routeing measure (or part of a routeing measure). Routeing measures include traffic separation schemes, deep-water routes, two-way routes, archipelagic sea lanes, and fairway systems.
			* 
			* 
		* @property categoryOfRouteingMeasure[1..1] categoryOfRouteingMeasure |Defined in RouteingMeasure
		* @property categoryOfTrafficSeparationScheme[0..1] categoryOfTrafficSeparationScheme |Defined in RouteingMeasure
		* @property categoryOfNavigationLine[0..1] categoryOfNavigationLine |Defined in RouteingMeasure
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfRouteingMeasure', 'categoryOfRouteingMeasure', 1, 1);
				$this->addAttribute('categoryOfTrafficSeparationScheme', 'categoryOfTrafficSeparationScheme', 0, 1);
				$this->addAttribute('categoryOfNavigationLine', 'categoryOfNavigationLine', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType ShipReportingServiceArea
		*
		* A service established by a relevant authority consisting of one or more reporting points or lines at which ships are required to report their identity, course, speed and other data to the monitoring authority.
		* 
		* 
		* @property serviceAccessProcedure[0..1] serviceAccessProcedure |Defined in ShipReportingServiceArea
		* @property requirementsForMaintenanceOfListeningWatch[1..1] requirementsForMaintenanceOfListeningWatch |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadioCallingInPoint |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadarRange |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationWarning |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationTraffic |Defined in ShipReportingServiceArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class ShipReportingServiceArea extends ReportableServiceArea
		{
		
			/**
			* FeatureType ShipReportingServiceArea
			*
			* A service established by a relevant authority consisting of one or more reporting points or lines at which ships are required to report their identity, course, speed and other data to the monitoring authority.
			* 
			* 
		* @property serviceAccessProcedure[0..1] serviceAccessProcedure |Defined in ShipReportingServiceArea
		* @property requirementsForMaintenanceOfListeningWatch[1..1] requirementsForMaintenanceOfListeningWatch |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadioCallingInPoint |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadarRange |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationWarning |Defined in ShipReportingServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationTraffic |Defined in ShipReportingServiceArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('serviceAccessProcedure', 'serviceAccessProcedure', 0, 1);
				$this->addAttribute('requirementsForMaintenanceOfListeningWatch', 'requirementsForMaintenanceOfListeningWatch', 1, 1);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'RadioCallingInPoint', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'RadarRange', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'SignalStationWarning', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'SignalStationTraffic', 0, MAX_OCCUR );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType SignalStationWarning
		*
		* A warning signal station is a place on shore from which warning signals are made to ships at sea.
		* 
		* 
		* @property categoryOfSignalStationWarning[1..*] categoryOfSignalStationWarning |Defined in SignalStationWarning
		* @property communicationChannel[0..*] communicationChannel |Defined in SignalStationWarning
		* @property status[0..*] status |Defined in SignalStationWarning
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in SignalStationWarning
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in SignalStationWarning
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in SignalStationWarning
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class SignalStationWarning extends FeatureType
		{
		
			/**
			* FeatureType SignalStationWarning
			*
			* A warning signal station is a place on shore from which warning signals are made to ships at sea.
			* 
			* 
		* @property categoryOfSignalStationWarning[1..*] categoryOfSignalStationWarning |Defined in SignalStationWarning
		* @property communicationChannel[0..*] communicationChannel |Defined in SignalStationWarning
		* @property status[0..*] status |Defined in SignalStationWarning
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in SignalStationWarning
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in SignalStationWarning
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in SignalStationWarning
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfSignalStationWarning', 'categoryOfSignalStationWarning', 1, MAX_OCCUR);
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'VesselTrafficServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'LocalPortServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'ShipReportingServiceArea', 0, 1 );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType SignalStationTraffic
		*
		* A traffic signal station is a place on shore from which signals are made to regulate the movement of traffic.
		* 
		* 
		* @property categoryOfSignalStationTraffic[1..*] categoryOfSignalStationTraffic |Defined in SignalStationTraffic
		* @property communicationChannel[0..*] communicationChannel |Defined in SignalStationTraffic
		* @property status[0..*] status |Defined in SignalStationTraffic
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in SignalStationTraffic
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in SignalStationTraffic
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in SignalStationTraffic
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class SignalStationTraffic extends OrganisationContactArea
		{
		
			/**
			* FeatureType SignalStationTraffic
			*
			* A traffic signal station is a place on shore from which signals are made to regulate the movement of traffic.
			* 
			* 
		* @property categoryOfSignalStationTraffic[1..*] categoryOfSignalStationTraffic |Defined in SignalStationTraffic
		* @property communicationChannel[0..*] communicationChannel |Defined in SignalStationTraffic
		* @property status[0..*] status |Defined in SignalStationTraffic
		* @property TrafficControlServiceAggregation_componentOf[0..1] VesselTrafficServiceArea |Defined in SignalStationTraffic
		* @property TrafficControlServiceAggregation_componentOf[0..1] LocalPortServiceArea |Defined in SignalStationTraffic
		* @property TrafficControlServiceAggregation_componentOf[0..1] ShipReportingServiceArea |Defined in SignalStationTraffic
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfSignalStationTraffic', 'categoryOfSignalStationTraffic', 1, MAX_OCCUR);
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'VesselTrafficServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'LocalPortServiceArea', 0, 1 );
				$this->addAttribute('TrafficControlServiceAggregation_componentOf', 'ShipReportingServiceArea', 0, 1 );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType UnderkeelClearanceAllowanceArea
		*
		* An area for which an authority has stated underkeel allowance requirements.
		* 
		* 
		* @property underkeelAllowance[0..1] underkeelAllowance |Defined in UnderkeelClearanceAllowanceArea
		* @property waterLevelTrend[0..1] waterLevelTrend |Defined in UnderkeelClearanceAllowanceArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class UnderkeelClearanceAllowanceArea extends FeatureType
		{
		
			/**
			* FeatureType UnderkeelClearanceAllowanceArea
			*
			* An area for which an authority has stated underkeel allowance requirements.
			* 
			* 
		* @property underkeelAllowance[0..1] underkeelAllowance |Defined in UnderkeelClearanceAllowanceArea
		* @property waterLevelTrend[0..1] waterLevelTrend |Defined in UnderkeelClearanceAllowanceArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('underkeelAllowance', 'underkeelAllowance', 0, 1);
				$this->addAttribute('waterLevelTrend', 'waterLevelTrend', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType UnderkeelClearanceManagementArea
		*
		* An area for which an authority permits use of dynamic underkeel clearance information or provides dynamic information related to underkeel clearances.
		* 
		* 
		* @property dynamicResource[1..1] dynamicResource |Defined in UnderkeelClearanceManagementArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class UnderkeelClearanceManagementArea extends ReportableServiceArea
		{
		
			/**
			* FeatureType UnderkeelClearanceManagementArea
			*
			* An area for which an authority permits use of dynamic underkeel clearance information or provides dynamic information related to underkeel clearances.
			* 
			* 
		* @property dynamicResource[1..1] dynamicResource |Defined in UnderkeelClearanceManagementArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('dynamicResource', 'dynamicResource', 1, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType VesselTrafficServiceArea
		*
		* The area of any service implemented by a relevant authority primarily designed to improve safety and efficiency of traffic flow and the protection of the environment. It may range from simple information messages, to extensive organisation of the traffic involving national or regional schemes.
		* 
		* 
		* @property categoryOfVesselTrafficService[0..*] categoryOfVesselTrafficService |Defined in VesselTrafficServiceArea
		* @property serviceAccessProcedure[0..1] serviceAccessProcedure |Defined in VesselTrafficServiceArea
		* @property requirementsForMaintenanceOfListeningWatch[1..1] requirementsForMaintenanceOfListeningWatch |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadioCallingInPoint |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadarRange |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationWarning |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationTraffic |Defined in VesselTrafficServiceArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class VesselTrafficServiceArea extends ReportableServiceArea
		{
		
			/**
			* FeatureType VesselTrafficServiceArea
			*
			* The area of any service implemented by a relevant authority primarily designed to improve safety and efficiency of traffic flow and the protection of the environment. It may range from simple information messages, to extensive organisation of the traffic involving national or regional schemes.
			* 
			* 
		* @property categoryOfVesselTrafficService[0..*] categoryOfVesselTrafficService |Defined in VesselTrafficServiceArea
		* @property serviceAccessProcedure[0..1] serviceAccessProcedure |Defined in VesselTrafficServiceArea
		* @property requirementsForMaintenanceOfListeningWatch[1..1] requirementsForMaintenanceOfListeningWatch |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadioCallingInPoint |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] RadarRange |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationWarning |Defined in VesselTrafficServiceArea
		* @property TrafficControlServiceAggregation_consistsOf[0..*] SignalStationTraffic |Defined in VesselTrafficServiceArea
		* @property TrafficServRept_reptForTrafficServ[0..*] ShipReport |Defined in ReportableServiceArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfVesselTrafficService', 'categoryOfVesselTrafficService', 0, MAX_OCCUR);
				$this->addAttribute('serviceAccessProcedure', 'serviceAccessProcedure', 0, 1);
				$this->addAttribute('requirementsForMaintenanceOfListeningWatch', 'requirementsForMaintenanceOfListeningWatch', 1, 1);
				
				//FeatureBindings
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'RadioCallingInPoint', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'RadarRange', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'SignalStationWarning', 0, MAX_OCCUR );
				$this->addAttribute('TrafficControlServiceAggregation_consistsOf', 'SignalStationTraffic', 0, MAX_OCCUR );
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType WaterwayArea
		*
		* An area in which uniform general information of the waterway exists.
		* 
		* 
		* @property dynamicResource[1..1] dynamicResource |Defined in WaterwayArea
		* @property siltationRate[0..1] siltationRate |Defined in WaterwayArea
		* @property status[0..*] status |Defined in WaterwayArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
		*/
		 class WaterwayArea extends SupervisedArea
		{
		
			/**
			* FeatureType WaterwayArea
			*
			* An area in which uniform general information of the waterway exists.
			* 
			* 
		* @property dynamicResource[1..1] dynamicResource |Defined in WaterwayArea
		* @property siltationRate[0..1] siltationRate |Defined in WaterwayArea
		* @property status[0..*] status |Defined in WaterwayArea
		* @property SrvControl_controlAuthority[0..1] Authority |Defined in SupervisedArea
		* @property SrvContact_theContactDetails[0..*] ContactDetails |Defined in OrganisationContactArea
		* @property fixedDateRange[0..1] fixedDateRange |Defined in FeatureType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in FeatureType
		* @property featureName[0..*] featureName |Defined in FeatureType
		* @property sourceIndication[0..1] sourceIndication |Defined in FeatureType
		* @property textContent[0..1] textContent |Defined in FeatureType
		* @property TextAssociation_positions[0..1] TextPlacement |Defined in FeatureType
		* @property PermissionType_permission[0..*] Applicability |Defined in FeatureType
		* @property AssociatedRxN_theRxN[0..*] AbstractRxN |Defined in FeatureType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in FeatureType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('dynamicResource', 'dynamicResource', 1, 1);
				$this->addAttribute('siltationRate', 'siltationRate', 0, 1);
				$this->addAttribute('status', 'status', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType DataQuality
		*
		* Abstract feature type for data quality meta-features.
		* 
		* 
		* @property information[0..*] information |Defined in DataQuality
		*/
		abstract class DataQuality extends AbstractFeatureType
		{
		
			/**
			* FeatureType DataQuality
			*
			* Abstract feature type for data quality meta-features.
			* 
			* 
		* @property information[0..*] information |Defined in DataQuality
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType QualityOfTemporalVariation
		*
		* Abstract type for meta-feature which can describe temporal variation.
		* 
		* 
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in QualityOfTemporalVariation
		* @property information[0..*] information |Defined in DataQuality
		*/
		abstract class QualityOfTemporalVariation extends DataQuality
		{
		
			/**
			* FeatureType QualityOfTemporalVariation
			*
			* Abstract type for meta-feature which can describe temporal variation.
			* 
			* 
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in QualityOfTemporalVariation
		* @property information[0..*] information |Defined in DataQuality
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfTemporalVariation', 'categoryOfTemporalVariation', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType DataCoverage
		*
		* A geographical area that describes the coverage and extent of spatial objects.
		* 
		* 
		* @property maximumDisplayScale[1..1] maximumDisplayScale |Defined in DataCoverage
		* @property minimumDisplayScale[1..1] minimumDisplayScale |Defined in DataCoverage
		*/
		 class DataCoverage extends AbstractFeatureType
		{
		
			/**
			* FeatureType DataCoverage
			*
			* A geographical area that describes the coverage and extent of spatial objects.
			* 
			* 
		* @property maximumDisplayScale[1..1] maximumDisplayScale |Defined in DataCoverage
		* @property minimumDisplayScale[1..1] minimumDisplayScale |Defined in DataCoverage
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('maximumDisplayScale', 'maximumDisplayScale', 1, 1);
				$this->addAttribute('minimumDisplayScale', 'minimumDisplayScale', 1, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType QualityOfNonBathymetricData
		*
		* An area within which a uniform assessment of the quality of the non-bathymetric data exists
		* 
		* 
		* @property orientationUncertainty[0..1] orientationUncertainty |Defined in QualityOfNonBathymetricData
		* @property horizontalDistanceUncertainty[0..1] horizontalDistanceUncertainty |Defined in QualityOfNonBathymetricData
		* @property horizontalPositionUncertainty[0..1] horizontalPositionUncertainty |Defined in QualityOfNonBathymetricData
		* @property sourceIndication[0..1] sourceIndication |Defined in QualityOfNonBathymetricData
		* @property surveyDateRange[0..1] surveyDateRange |Defined in QualityOfNonBathymetricData
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in QualityOfTemporalVariation
		* @property information[0..*] information |Defined in DataQuality
		*/
		 class QualityOfNonBathymetricData extends QualityOfTemporalVariation
		{
		
			/**
			* FeatureType QualityOfNonBathymetricData
			*
			* An area within which a uniform assessment of the quality of the non-bathymetric data exists
			* 
			* 
		* @property orientationUncertainty[0..1] orientationUncertainty |Defined in QualityOfNonBathymetricData
		* @property horizontalDistanceUncertainty[0..1] horizontalDistanceUncertainty |Defined in QualityOfNonBathymetricData
		* @property horizontalPositionUncertainty[0..1] horizontalPositionUncertainty |Defined in QualityOfNonBathymetricData
		* @property sourceIndication[0..1] sourceIndication |Defined in QualityOfNonBathymetricData
		* @property surveyDateRange[0..1] surveyDateRange |Defined in QualityOfNonBathymetricData
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in QualityOfTemporalVariation
		* @property information[0..*] information |Defined in DataQuality
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('orientationUncertainty', 'orientationUncertainty', 0, 1);
				$this->addAttribute('horizontalDistanceUncertainty', 'horizontalDistanceUncertainty', 0, 1);
				$this->addAttribute('horizontalPositionUncertainty', 'horizontalPositionUncertainty', 0, 1);
				$this->addAttribute('sourceIndication', 'sourceIndication', 0, 1);
				$this->addAttribute('surveyDateRange', 'surveyDateRange', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* FeatureType TextPlacement
		*
		* The Text Placement feature is used in association with the Feature Name attribute or a light description to optimise text positioning in ECDIS.
		* 
		* 
		* @property flipBearing[0..1] flipBearing |Defined in TextPlacement
		* @property scaleMinimum[0..1] scaleMinimum |Defined in TextPlacement
		* @property textJustification[1..1] textJustification |Defined in TextPlacement
		* @property text[0..1] text |Defined in TextPlacement
		* @property textType[0..1] textType |Defined in TextPlacement
		* @property TextAssociation_identifies[1..1] FeatureType |Defined in TextPlacement
		*/
		 class TextPlacement extends AbstractFeatureType
		{
		
			/**
			* FeatureType TextPlacement
			*
			* The Text Placement feature is used in association with the Feature Name attribute or a light description to optimise text positioning in ECDIS.
			* 
			* 
		* @property flipBearing[0..1] flipBearing |Defined in TextPlacement
		* @property scaleMinimum[0..1] scaleMinimum |Defined in TextPlacement
		* @property textJustification[1..1] textJustification |Defined in TextPlacement
		* @property text[0..1] text |Defined in TextPlacement
		* @property textType[0..1] textType |Defined in TextPlacement
		* @property TextAssociation_identifies[1..1] FeatureType |Defined in TextPlacement
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('flipBearing', 'flipBearing', 0, 1);
				$this->addAttribute('scaleMinimum', 'scaleMinimum', 0, 1);
				$this->addAttribute('textJustification', 'textJustification', 1, 1);
				$this->addAttribute('text', 'text', 0, 1);
				$this->addAttribute('textType', 'textType', 0, 1);
				
				//FeatureBindings
				$this->addAttribute('TextAssociation_identifies', 'FeatureType', 1, 1 );
				
				//InformationBindings
				
			}
		}
	
	
	
	//********************************* INFORMATION TYPES ***********************************************************
	
		/**
		* InformationType InformationType
		*
		* Generalized information type which carries all the common attributes
		* 
		* 
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		abstract class InformationType extends AbstractInformationType
		{
			
			/**
			* InformationType InformationType
			*
			* Generalized information type which carries all the common attributes
			* 
			* 
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('fixedDateRange', 'fixedDateRange', 0, 1);
				$this->addAttribute('periodicDateRange', 'periodicDateRange', 0, MAX_OCCUR);
				$this->addAttribute('featureName', 'featureName', 0, MAX_OCCUR);
				$this->addAttribute('sourceIndication', 'sourceIndication', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('AdditionalInformation_providesInformation', 'NauticalInformation', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType AbstractRxN
		*
		* An abstract superclass for information types that encode rules, recommendations, and general information in text or graphic form.
		* 
		* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		abstract class AbstractRxN extends InformationType
		{
			
			/**
			* InformationType AbstractRxN
			*
			* An abstract superclass for information types that encode rules, recommendations, and general information in text or graphic form.
			* 
			* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfAuthority', 'categoryOfAuthority', 0, 1);
				$this->addAttribute('textContent', 'textContent', 0, MAX_OCCUR);
				$this->addAttribute('graphic', 'graphic', 0, MAX_OCCUR);
				$this->addAttribute('rxnCode', 'rxnCode', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('InclusionType_isApplicableTo', 'Applicability', 0, MAX_OCCUR);
				$this->addAttribute('RelatedOrganisation_theOrganisation', 'AbstractRxN', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType Applicability
		*
		* Describes the relationship between vessel characteristics and: (i) the applicability of an associated information object or feature to the vessel; or, (ii) the use of a facility, place, or service by the vessel; or, (iii) passage of the vessel through an area.
		* 
		* 
		* @property inBallast[0..1] inBallast |Defined in Applicability
		* @property categoryOfCargo[0..*] categoryOfCargo |Defined in Applicability
		* @property categoryOfDangerousOrHazardousCargo[0..*] categoryOfDangerousOrHazardousCargo |Defined in Applicability
		* @property categoryOfVessel[0..1] categoryOfVessel |Defined in Applicability
		* @property categoryOfVesselRegistry[0..1] categoryOfVesselRegistry |Defined in Applicability
		* @property logicalConnectives[0..1] logicalConnectives |Defined in Applicability
		* @property thicknessOfIceCapability[0..1] thicknessOfIceCapability |Defined in Applicability
		* @property vesselPerformance[0..1] vesselPerformance |Defined in Applicability
		* @property information[0..*] information |Defined in Applicability
		* @property vesselsMeasurements[0..*] vesselsMeasurements |Defined in Applicability
		* @property InclusionType_theApplicableRxN[0..*] AbstractRxN |Defined in Applicability
		* @property ReportReqmt_theShipReport[0..*] ShipReport |Defined in Applicability
		* @property PermissionType_vslLocation[0..*] InformationType |Defined in Applicability
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class Applicability extends InformationType
		{
			
			/**
			* InformationType Applicability
			*
			* Describes the relationship between vessel characteristics and: (i) the applicability of an associated information object or feature to the vessel; or, (ii) the use of a facility, place, or service by the vessel; or, (iii) passage of the vessel through an area.
			* 
			* 
		* @property inBallast[0..1] inBallast |Defined in Applicability
		* @property categoryOfCargo[0..*] categoryOfCargo |Defined in Applicability
		* @property categoryOfDangerousOrHazardousCargo[0..*] categoryOfDangerousOrHazardousCargo |Defined in Applicability
		* @property categoryOfVessel[0..1] categoryOfVessel |Defined in Applicability
		* @property categoryOfVesselRegistry[0..1] categoryOfVesselRegistry |Defined in Applicability
		* @property logicalConnectives[0..1] logicalConnectives |Defined in Applicability
		* @property thicknessOfIceCapability[0..1] thicknessOfIceCapability |Defined in Applicability
		* @property vesselPerformance[0..1] vesselPerformance |Defined in Applicability
		* @property information[0..*] information |Defined in Applicability
		* @property vesselsMeasurements[0..*] vesselsMeasurements |Defined in Applicability
		* @property InclusionType_theApplicableRxN[0..*] AbstractRxN |Defined in Applicability
		* @property ReportReqmt_theShipReport[0..*] ShipReport |Defined in Applicability
		* @property PermissionType_vslLocation[0..*] InformationType |Defined in Applicability
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('inBallast', 'inBallast', 0, 1);
				$this->addAttribute('categoryOfCargo', 'categoryOfCargo', 0, MAX_OCCUR);
				$this->addAttribute('categoryOfDangerousOrHazardousCargo', 'categoryOfDangerousOrHazardousCargo', 0, MAX_OCCUR);
				$this->addAttribute('categoryOfVessel', 'categoryOfVessel', 0, 1);
				$this->addAttribute('categoryOfVesselRegistry', 'categoryOfVesselRegistry', 0, 1);
				$this->addAttribute('logicalConnectives', 'logicalConnectives', 0, 1);
				$this->addAttribute('thicknessOfIceCapability', 'thicknessOfIceCapability', 0, 1);
				$this->addAttribute('vesselPerformance', 'vesselPerformance', 0, 1);
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				$this->addAttribute('vesselsMeasurements', 'vesselsMeasurements', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('InclusionType_theApplicableRxN', 'AbstractRxN', 0, MAX_OCCUR);
				$this->addAttribute('ReportReqmt_theShipReport', 'ShipReport', 0, MAX_OCCUR);
				$this->addAttribute('PermissionType_vslLocation', 'InformationType', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType Authority
		*
		* A person or organization that has the legally delegated or invested authority, capacity, or power to perform a designated function or exert administrative control.
		* 
		* 
		* @property categoryOfAuthority[1..1] categoryOfAuthority |Defined in Authority
		* @property textContent[0..1] textContent |Defined in Authority
		* @property AuthorityContact_theContactDetails[0..*] ContactDetails |Defined in Authority
		* @property ReptAuthority_theShipReport[0..*] ShipReport |Defined in Authority
		* @property RelatedOrganisation_theInformation[0..*] AbstractRxN |Defined in Authority
		* @property AuthorityHours_theServiceHours[0..*] ServiceHours |Defined in Authority
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class Authority extends InformationType
		{
			
			/**
			* InformationType Authority
			*
			* A person or organization that has the legally delegated or invested authority, capacity, or power to perform a designated function or exert administrative control.
			* 
			* 
		* @property categoryOfAuthority[1..1] categoryOfAuthority |Defined in Authority
		* @property textContent[0..1] textContent |Defined in Authority
		* @property AuthorityContact_theContactDetails[0..*] ContactDetails |Defined in Authority
		* @property ReptAuthority_theShipReport[0..*] ShipReport |Defined in Authority
		* @property RelatedOrganisation_theInformation[0..*] AbstractRxN |Defined in Authority
		* @property AuthorityHours_theServiceHours[0..*] ServiceHours |Defined in Authority
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfAuthority', 'categoryOfAuthority', 1, 1);
				$this->addAttribute('textContent', 'textContent', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('AuthorityContact_theContactDetails', 'ContactDetails', 0, MAX_OCCUR);
				$this->addAttribute('ReptAuthority_theShipReport', 'ShipReport', 0, MAX_OCCUR);
				$this->addAttribute('RelatedOrganisation_theInformation', 'AbstractRxN', 0, MAX_OCCUR);
				$this->addAttribute('AuthorityHours_theServiceHours', 'ServiceHours', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType ContactDetails
		*
		* information on how to reach a person or organisation by postal, internet, telephone, telex and radio systems
		* 
		* 
		* @property callName[0..1] callName |Defined in ContactDetails
		* @property callSign[0..1] callSign |Defined in ContactDetails
		* @property categoryOfCommPref[0..1] categoryOfCommPref |Defined in ContactDetails
		* @property communicationChannel[0..*] communicationChannel |Defined in ContactDetails
		* @property contactAddress[0..*] contactAddress |Defined in ContactDetails
		* @property contactInstructions[0..1] contactInstructions |Defined in ContactDetails
		* @property frequencyPair[0..*] frequencyPair |Defined in ContactDetails
		* @property information[0..*] information |Defined in ContactDetails
		* @property language[0..1] language |Defined in ContactDetails
		* @property mMSICode[0..1] mMSICode |Defined in ContactDetails
		* @property onlineResource[0..*] onlineResource |Defined in ContactDetails
		* @property telecommunications[0..*] telecommunications |Defined in ContactDetails
		* @property AuthorityContact_theAuthority[0..*] Authority |Defined in ContactDetails
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class ContactDetails extends InformationType
		{
			
			/**
			* InformationType ContactDetails
			*
			* information on how to reach a person or organisation by postal, internet, telephone, telex and radio systems
			* 
			* 
		* @property callName[0..1] callName |Defined in ContactDetails
		* @property callSign[0..1] callSign |Defined in ContactDetails
		* @property categoryOfCommPref[0..1] categoryOfCommPref |Defined in ContactDetails
		* @property communicationChannel[0..*] communicationChannel |Defined in ContactDetails
		* @property contactAddress[0..*] contactAddress |Defined in ContactDetails
		* @property contactInstructions[0..1] contactInstructions |Defined in ContactDetails
		* @property frequencyPair[0..*] frequencyPair |Defined in ContactDetails
		* @property information[0..*] information |Defined in ContactDetails
		* @property language[0..1] language |Defined in ContactDetails
		* @property mMSICode[0..1] mMSICode |Defined in ContactDetails
		* @property onlineResource[0..*] onlineResource |Defined in ContactDetails
		* @property telecommunications[0..*] telecommunications |Defined in ContactDetails
		* @property AuthorityContact_theAuthority[0..*] Authority |Defined in ContactDetails
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('callName', 'callName', 0, 1);
				$this->addAttribute('callSign', 'callSign', 0, 1);
				$this->addAttribute('categoryOfCommPref', 'categoryOfCommPref', 0, 1);
				$this->addAttribute('communicationChannel', 'communicationChannel', 0, MAX_OCCUR);
				$this->addAttribute('contactAddress', 'contactAddress', 0, MAX_OCCUR);
				$this->addAttribute('contactInstructions', 'contactInstructions', 0, 1);
				$this->addAttribute('frequencyPair', 'frequencyPair', 0, MAX_OCCUR);
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				$this->addAttribute('language', 'language', 0, 1);
				$this->addAttribute('mMSICode', 'mMSICode', 0, 1);
				$this->addAttribute('onlineResource', 'onlineResource', 0, MAX_OCCUR);
				$this->addAttribute('telecommunications', 'telecommunications', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('AuthorityContact_theAuthority', 'Authority', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType NauticalInformation
		*
		* Nautical information about a related area or facility.
		* 
		* 
		* @property AdditionalInformation_informationProvidedFor[0..*] InformationType |Defined in NauticalInformation
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class NauticalInformation extends AbstractRxN
		{
			
			/**
			* InformationType NauticalInformation
			*
			* Nautical information about a related area or facility.
			* 
			* 
		* @property AdditionalInformation_informationProvidedFor[0..*] InformationType |Defined in NauticalInformation
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('AdditionalInformation_informationProvidedFor', 'InformationType', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType NonStandardWorkingDay
		*
		* Days when many services are not available. Often days of festivity or recreation or public holidays when normal working hours are limited, especially a national or religious festival, etc.
		* 
		* 
		* @property dateFixed[0..*] dateFixed |Defined in NonStandardWorkingDay
		* @property dateVariable[0..*] dateVariable |Defined in NonStandardWorkingDay
		* @property information[0..*] information |Defined in NonStandardWorkingDay
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class NonStandardWorkingDay extends InformationType
		{
			
			/**
			* InformationType NonStandardWorkingDay
			*
			* Days when many services are not available. Often days of festivity or recreation or public holidays when normal working hours are limited, especially a national or religious festival, etc.
			* 
			* 
		* @property dateFixed[0..*] dateFixed |Defined in NonStandardWorkingDay
		* @property dateVariable[0..*] dateVariable |Defined in NonStandardWorkingDay
		* @property information[0..*] information |Defined in NonStandardWorkingDay
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('dateFixed', 'dateFixed', 0, MAX_OCCUR);
				$this->addAttribute('dateVariable', 'dateVariable', 0, MAX_OCCUR);
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* InformationType ServiceHours
		*
		* The time when a service is available and known exceptions.
		* 
		* 
		* @property scheduleByDayOfWeek[1..*] scheduleByDayOfWeek |Defined in ServiceHours
		* @property information[0..*] information |Defined in ServiceHours
		* @property ExceptionalWorkday_partialWorkingDay[0..*] NonStandardWorkingDay |Defined in ServiceHours
		* @property AuthorityHours_theAuthority_srvHrs[0..*] Authority |Defined in ServiceHours
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class ServiceHours extends InformationType
		{
			
			/**
			* InformationType ServiceHours
			*
			* The time when a service is available and known exceptions.
			* 
			* 
		* @property scheduleByDayOfWeek[1..*] scheduleByDayOfWeek |Defined in ServiceHours
		* @property information[0..*] information |Defined in ServiceHours
		* @property ExceptionalWorkday_partialWorkingDay[0..*] NonStandardWorkingDay |Defined in ServiceHours
		* @property AuthorityHours_theAuthority_srvHrs[0..*] Authority |Defined in ServiceHours
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('scheduleByDayOfWeek', 'scheduleByDayOfWeek', 1, MAX_OCCUR);
				$this->addAttribute('information', 'information', 0, MAX_OCCUR);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('ExceptionalWorkday_partialWorkingDay', 'NonStandardWorkingDay', 0, MAX_OCCUR);
				$this->addAttribute('AuthorityHours_theAuthority_srvHrs', 'Authority', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType ShipReport
		*
		* Describes how a ship should report to a maritime authority, including when to report, what to report and whether the format conforms to the IMO standard.
		* 
		* 
		* @property categoryOfShipReport[1..*] categoryOfShipReport |Defined in ShipReport
		* @property imoFormatForReporting[1..1] imoFormatForReporting |Defined in ShipReport
		* @property noticeTime[1..*] noticeTime |Defined in ShipReport
		* @property textContent[0..1] textContent |Defined in ShipReport
		* @property ReportReqmt_mustBeFiledBy[0..*] Applicability |Defined in ShipReport
		* @property ReptAuthority_reportTo[0..*] Authority |Defined in ShipReport
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class ShipReport extends InformationType
		{
			
			/**
			* InformationType ShipReport
			*
			* Describes how a ship should report to a maritime authority, including when to report, what to report and whether the format conforms to the IMO standard.
			* 
			* 
		* @property categoryOfShipReport[1..*] categoryOfShipReport |Defined in ShipReport
		* @property imoFormatForReporting[1..1] imoFormatForReporting |Defined in ShipReport
		* @property noticeTime[1..*] noticeTime |Defined in ShipReport
		* @property textContent[0..1] textContent |Defined in ShipReport
		* @property ReportReqmt_mustBeFiledBy[0..*] Applicability |Defined in ShipReport
		* @property ReptAuthority_reportTo[0..*] Authority |Defined in ShipReport
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfShipReport', 'categoryOfShipReport', 1, MAX_OCCUR);
				$this->addAttribute('imoFormatForReporting', 'imoFormatForReporting', 1, 1);
				$this->addAttribute('noticeTime', 'noticeTime', 1, MAX_OCCUR);
				$this->addAttribute('textContent', 'textContent', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				$this->addAttribute('ReportReqmt_mustBeFiledBy', 'Applicability', 0, MAX_OCCUR);
				$this->addAttribute('ReptAuthority_reportTo', 'Authority', 0, MAX_OCCUR);
				
			}
		}
	
		/**
		* InformationType Recommendations
		*
		* Recommendations for a related area or facility.
		* 
		* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class Recommendations extends AbstractRxN
		{
			
			/**
			* InformationType Recommendations
			*
			* Recommendations for a related area or facility.
			* 
			* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* InformationType Regulations
		*
		* Regulations for a related area or facility.
		* 
		* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class Regulations extends AbstractRxN
		{
			
			/**
			* InformationType Regulations
			*
			* Regulations for a related area or facility.
			* 
			* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* InformationType Restrictions
		*
		* Restrictions for a related area or facility.
		* 
		* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
		*/
		 class Restrictions extends AbstractRxN
		{
			
			/**
			* InformationType Restrictions
			*
			* Restrictions for a related area or facility.
			* 
			* 
		* @property categoryOfAuthority[0..1] categoryOfAuthority |Defined in AbstractRxN
		* @property textContent[0..*] textContent |Defined in AbstractRxN
		* @property graphic[0..*] graphic |Defined in AbstractRxN
		* @property rxnCode[0..*] rxnCode |Defined in AbstractRxN
		* @property InclusionType_isApplicableTo[0..*] Applicability |Defined in AbstractRxN
		* @property RelatedOrganisation_theOrganisation[0..*] AbstractRxN |Defined in AbstractRxN
		* @property fixedDateRange[0..1] fixedDateRange |Defined in InformationType
		* @property periodicDateRange[0..*] periodicDateRange |Defined in InformationType
		* @property featureName[0..*] featureName |Defined in InformationType
		* @property sourceIndication[0..*] sourceIndication |Defined in InformationType
		* @property AdditionalInformation_providesInformation[0..*] NauticalInformation |Defined in InformationType
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* InformationType SpatialQuality
		*
		* 
		* 
		* 
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in SpatialQuality
		* @property qualityOfHorizontalMeasurement[0..1] qualityOfHorizontalMeasurement |Defined in SpatialQuality
		* @property horizontalPositionUncertainty[0..1] horizontalPositionUncertainty |Defined in SpatialQuality
		*/
		 class SpatialQuality extends AbstractInformationType
		{
			
			/**
			* InformationType SpatialQuality
			*
			* 
			* 
			* 
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in SpatialQuality
		* @property qualityOfHorizontalMeasurement[0..1] qualityOfHorizontalMeasurement |Defined in SpatialQuality
		* @property horizontalPositionUncertainty[0..1] horizontalPositionUncertainty |Defined in SpatialQuality
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				$this->addAttribute('categoryOfTemporalVariation', 'categoryOfTemporalVariation', 0, 1);
				$this->addAttribute('qualityOfHorizontalMeasurement', 'qualityOfHorizontalMeasurement', 0, 1);
				$this->addAttribute('horizontalPositionUncertainty', 'horizontalPositionUncertainty', 0, 1);
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
		/**
		* InformationType SpatialQualityPoints
		*
		* 
		* 
		* 
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in SpatialQuality
		* @property qualityOfHorizontalMeasurement[0..1] qualityOfHorizontalMeasurement |Defined in SpatialQuality
		* @property horizontalPositionUncertainty[0..1] horizontalPositionUncertainty |Defined in SpatialQuality
		*/
		 class SpatialQualityPoints extends SpatialQuality
		{
			
			/**
			* InformationType SpatialQualityPoints
			*
			* 
			* 
			* 
		* @property categoryOfTemporalVariation[0..1] categoryOfTemporalVariation |Defined in SpatialQuality
		* @property qualityOfHorizontalMeasurement[0..1] qualityOfHorizontalMeasurement |Defined in SpatialQuality
		* @property horizontalPositionUncertainty[0..1] horizontalPositionUncertainty |Defined in SpatialQuality
			*/
			public function __construct()
			{
				parent::__construct();
				
				//AttributeBindings
				
				//FeatureBindings
				
				//InformationBindings
				
			}
		}
	
	
	//********************************* ROLES ***********************************************************
	
		/**
		* Role
		* A pointer to the aggregate in a whole-part relationship.
		*/
		class componentOf extends AbstractRole{}
	
		/**
		* Role
		* A pointer to a part in a whole-part relationship
		*/
		class consistsOf extends AbstractRole{}
	
		/**
		* Role
		* The applicable regulation, restriction, recommendation or nautical information
		*/
		class theApplicableRxN extends AbstractRole{}
	
		/**
		* Role
		* The location in which the information item applies
		*/
		class appliesInLocation extends AbstractRole{}
	
		/**
		* Role
		* A pointer to an Authority object
		*/
		class theAuthority extends AbstractRole{}
	
		/**
		* Role
		* The authority for which service hours are given
		*/
		class theAuthority_srvHrs extends AbstractRole{}
	
		/**
		* Role
		* A pointer to an Contact Details object
		*/
		class theContactDetails extends AbstractRole{}
	
		/**
		* Role
		* The controlling organization or authority for a geographically located service
		*/
		class controlAuthority extends AbstractRole{}
	
		/**
		* Role
		* The service controlled by an organisation or authority
		*/
		class controlledService extends AbstractRole{}
	
		/**
		* Role
		* A pointer to a specific spatial type(s).
		*/
		class definedFor extends AbstractRole{}
	
		/**
		* Role
		* A pointer to an information type providing spatial quality information.
		*/
		class defines extends AbstractRole{}
	
		/**
		* Role
		* A pointer to a specific feature(s).
		*/
		class identifies extends AbstractRole{}
	
		/**
		* Role
		* A pointer to a specific feature(s) for which further information is required.
		*/
		class informationProvidedFor extends AbstractRole{}
	
		/**
		* Role
		* The object or class of objects to which the regulation, restriction, recommendation, or nautical information applies
		*/
		class isApplicableTo extends AbstractRole{}
	
		/**
		* Role
		* The location for which service hours are given
		*/
		class location_srvHrs extends AbstractRole{}
	
		/**
		* Role
		* Information related to an organisation
		*/
		class theInformation extends AbstractRole{}
	
		/**
		* Role
		* The organisation to which information relates
		*/
		class theOrganisation extends AbstractRole{}
	
		/**
		* Role
		* The work hours for a non-standard workday
		*/
		class partialWorkingDay extends AbstractRole{}
	
		/**
		* Role
		* The permissions for a location
		*/
		class permission extends AbstractRole{}
	
		/**
		* Role
		* The class (generally, qualifying vessels) which must file the report
		*/
		class mustBeFiledBy extends AbstractRole{}
	
		/**
		* Role
		* A pointer to a specific cartographically positioned location for text.
		*/
		class positions extends AbstractRole{}
	
		/**
		* Role
		* A pointer to an object that provides more information about the referencing feature or information type.
		*/
		class providesInformation extends AbstractRole{}
	
		/**
		* Role
		* The feature pertaining to a report
		*/
		class reptForLocation extends AbstractRole{}
	
		/**
		* Role
		* The organisation or place to which a report is sent.
		*/
		class reportTo extends AbstractRole{}
	
		/**
		* Role
		* The regulation, restriction, recommendation, or nautical information
		*/
		class theRxN extends AbstractRole{}
	
		/**
		* Role
		* Service hours for an authority ore service provider
		*/
		class theServiceHours extends AbstractRole{}
	
		/**
		* Role
		* The usual service hours to which an exception applies
		*/
		class theServiceHours_nsdy extends AbstractRole{}
	
		/**
		* Role
		* Pointer to service or facility
		*/
		class servicePlace extends AbstractRole{}
	
		/**
		* Role
		* The area served by a service provider.
		*/
		class serviceArea extends AbstractRole{}
	
		/**
		* Role
		* Pointer to a feature from where a provider supplies a service.
		*/
		class serviceProvider extends AbstractRole{}
	
		/**
		* Role
		* The report to be filed by a vessel
		*/
		class theShipReport extends AbstractRole{}
	
		/**
		* Role
		* The report for a traffic service
		*/
		class reptForTrafficServ extends AbstractRole{}
	
		/**
		* Role
		* The location to which the permission statement applies
		*/
		class vslLocation extends AbstractRole{}
	
	
	//********************************* FeatureAssociations ***********************************************************
	
		/**
		* FeatureAssociation
		* Association linking the location from which a service is provided and the area(s) served.
		*/
		class ServiceProvisionArea extends AbstractFeatureAssociation
		{
			
			public $serviceProvider = null;
			public $serviceArea = null;
		}
	
		/**
		* FeatureAssociation
		* A feature association for the binding between a pilotage district and its component pilot boarding places.
		*/
		class PilotageDistrictAssociation extends AbstractFeatureAssociation
		{
			
			public $componentOf = null;
			public $consistsOf = null;
		}
	
		/**
		* FeatureAssociation
		* A feature association for the binding between a geo feature and the cartographically positioned location for text.
		*/
		class TextAssociation extends AbstractFeatureAssociation
		{
			
			public $identifies = null;
			public $positions = null;
		}
	
		/**
		* FeatureAssociation
		* A feature association for the binding between a traffic control service and auxiliary features.
		*/
		class TrafficControlServiceAggregation extends AbstractFeatureAssociation
		{
			
			public $componentOf = null;
			public $consistsOf = null;
		}
	
	
	
	//********************************* InformationAssociations ***********************************************************
	
		/**
		* InformationAssociation
		* A feature association for the binding between at least one instance of a geo feature and an instance of an information type.
		*/
		class AdditionalInformation extends AbstractInformationAssociation
		{
			
			public $providesInformation = null;
			
			public $informationProvidedFor = null;
			
		}
	
		/**
		* InformationAssociation
		* Contact information for an authority
		*/
		class AuthorityContact extends AbstractInformationAssociation
		{
			
			public $theAuthority = null;
			
			public $theContactDetails = null;
			
		}
	
		/**
		* InformationAssociation
		* Service hours for an authority
		*/
		class AuthorityHours extends AbstractInformationAssociation
		{
			
			public $theAuthority_srvHrs = null;
			
			public $theServiceHours = null;
			
		}
	
		/**
		* InformationAssociation
		* Association between a geographic location and a regulation, restriction, recommendation, or nautical information
		*/
		class AssociatedRxN extends AbstractInformationAssociation
		{
			
			public $appliesInLocation = null;
			
			public $theRxN = null;
			
		}
	
		/**
		* InformationAssociation
		* Exception to the usual working day
		*/
		class ExceptionalWorkday extends AbstractInformationAssociation
		{
			
			public $theServiceHours_nsdy = null;
			
			public $partialWorkingDay = null;
			
		}
	
		/**
		* InformationAssociation
		* Association class specifying the relationship between the subset of vessels described by an APPLIC data object and a regulation (restriction, recommendation, or nautical information).
		*/
		class InclusionType extends AbstractInformationAssociation
		{
			
			public $theApplicableRxN = null;
			
			public $isApplicableTo = null;
			
		}
	
		/**
		* InformationAssociation
		* Association class for associations describing whether the subsets of vessels determined by the ship characteristics specified in APPLIC may (or must, etc.) transit,  enter, or use  a feature.
		*/
		class PermissionType extends AbstractInformationAssociation
		{
			
			public $vslLocation = null;
			
			public $permission = null;
			
		}
	
		/**
		* InformationAssociation
		* Related organisation
		*/
		class RelatedOrganisation extends AbstractInformationAssociation
		{
			
			public $theInformation = null;
			
			public $theOrganisation = null;
			
		}
	
		/**
		* InformationAssociation
		* The authority with which a report must be filed
		*/
		class ReptAuthority extends AbstractInformationAssociation
		{
			
			public $reportTo = null;
			
			public $theShipReport = null;
			
		}
	
		/**
		* InformationAssociation
		* Association between types of reports and classes of vessels which must file report of the type described
		*/
		class ReportReqmt extends AbstractInformationAssociation
		{
			
			public $theShipReport = null;
			
			public $mustBeFiledBy = null;
			
		}
	
		/**
		* InformationAssociation
		* Contact details for a service or facility
		*/
		class SrvContact extends AbstractInformationAssociation
		{
			
			public $servicePlace = null;
			
			public $theContactDetails = null;
			
		}
	
		/**
		* InformationAssociation
		* Association between a geographically located service and the organisation that controls it
		*/
		class SrvControl extends AbstractInformationAssociation
		{
			
			public $controlledService = null;
			
			public $controlAuthority = null;
			
		}
	
		/**
		* InformationAssociation
		* An association for the binding between a spatial type and its spatial quality information.
		*/
		class SpatialAssociation extends AbstractInformationAssociation
		{
			
			public $definedFor = null;
			
			public $defines = null;
			
		}
	
		/**
		* InformationAssociation
		* Working hours for a service or facility described by a geographic location
		*/
		class LocationHours extends AbstractInformationAssociation
		{
			
			public $location_srvHrs = null;
			
			public $theServiceHours = null;
			
		}
	
		/**
		* InformationAssociation
		* Association between traffic control service and reports required of vessels pertaining to that area
		*/
		class TrafficServRept extends AbstractInformationAssociation
		{
			
			public $reptForLocation = null;
			
			public $reptForTrafficServ = null;
			
		}
	